---
title: "Effort-associated CpG sites"
format: 
  html:
    link-external-newwindow: true
    fig-cap-location: top
---

**Which changes in CpG site methylation are associated with reproductive effort?**

We have now identified a subset of CpG sites that significantly change over the lekking season, either by increasing or decreasing in methylation level. We next test which CpG site changes are significantly associated with different measures of reproductive effort. 

Lekking is an energy-intensive, costly activity, as reflected by the losses in body mass in males that invest in reproduction (Lebigre et al., 2007). Therefore, we expect that the cost associated with high reproductive investment ledas to the up- or downregulation of associated genes, for example to invest more or less in certain other processess.

Similar to before, we build a GLMM per CpG site to identify CpG sites whose DNA methylation change is associated with reproductive effort. We quantify reproductive effort using three behavioural traits: lek attendance, fighting rate and lek centrality. For each CpG site for each trait, we build a model that predicts delta methylation, while fitting the behaviour as a fixed effect.

## Pre-methylation vs delta methylation

Prior to the analysis, we investigated the relationship between delta methylation and pre-lekking methylation levels. We expect that pre-lekking methylation levels can affect delta methylation %. If pre-lekking methylation is 0%, there is potential for +100% change, but if pre-lekking methylation is 100%, there is potential for -100% change. On the other hand, if pre-lekking methylation is 50%, there is only potential for -50% and +50% change. Thus, we expect a U-shaped relationship between pre-lekking and absolute delta methylation. I plot the empirical data for this, based on only the CpG sites that significantly change across the lekking period. The red line in the left plot is the (linear) regression while correcting for id as a random effect (so a lmer output).

![Pre-lekking vs delta lekking methylation %](../plots/explore/pre_vs_delta.png)

There does seem to be some association between the two, yet we might mask the effect of delta methylation on the phenotype if we include pre-lekking methylation in the model too. Therefore, we run two models in parallel: one that does include pre-lekking methylation % and one that does not, and then compare the model output / inference based on these two models. Note: for the manuscript we might want to choose for one in the main text and present the other in the supplements (although the exact CpG sites change, the conclusion that little is going on remains the same)

## Prepare the data {#sec-effort}

```{r model, echo=T, eval=F}
#| code-fold: true
### load packages
pacman::p_load(tidyverse, data.table, tibble, gaston,
               parallel, performance, lmerTest, tidystats, ggpointdensity)
               
source("scripts/plotting_theme.R")

### load data epi

load(file="results/modeloutput/changing/changing_sites_glmer.RData")

### load phenotypic data

load(file = "data/phenotypes/fulldata_complete_epi_withdates.RData")

### methylation difference

load(file = "results/modeloutput/all_sites_deltameth.RData")

delta_meth <- subset(delta_meth, chr_pos %in% changing_cpg$chr_pos)

### combine delta methylation data with site and behaviour info

delta_meth <- left_join(delta_meth, unique(all_pheno_epi[,c("id", "year", "site", "Core")], by = c("id", "year")))

### z-transform the traits before the model that subsets IDs and years where there is
### data for that CpG site

effort <- all_pheno_epi %>% dplyr::select(c("id", "year", "attend", "fight", "dist", "MS")) %>% filter(!is.na(attend)) %>% unique()

effort <- subset(effort, id %in% delta_meth$id)

effort$attend_scl <- scale(effort$attend)
effort$fight_scl <- scale(effort$fight)
effort$dist_scl <- scale(effort$dist)

### combine reproductive effort data with methylation data

delta_meth <- left_join(delta_meth, effort[,c("id", "year", "attend", "fight", "dist", "attend_scl", "fight_scl", "dist_scl")], by = c("id", "year"))

```

Note that we z-transform the phenotypic data based on all samples, rather than on a model-by-model basis. This is because not all individuals will have epigenetic data for each CpG site, meaning that the z-transformed version of the phenotypic traits would change depending on the sample size, which we want to avoid.

## Filter for *n* > 20

Although we have filtered for CpG sites that have enough samples in both the pre- and post-lekking time periods, this does not mean that it was the same pair of samples that have data in both time periods. This means that we cannot outrule that we have a low sample size for delta methylation (where both pre- and post-lekking methylations for a given individual for a given CpG site had to be complete) differences that can be associated with phenotypic traits. Therefore, before we run the models, we filter for CpG sites that have at least 20 measures of delta methylation (and the phenotype). Since not all data is complete for all three behavioural traits, we do this on a trait-by-trait basis

```{r filter_n, echo = T, eval=F}

### only select cpg sites with enough data
delta_meth_n_dist <- delta_meth %>% group_by(chr_pos) %>% filter(!is.na(delta_meth)& !is.na(dist)) %>% tally()
delta_meth_n_dist <- subset(delta_meth_n_dist, n > 20)
 
delta_meth_sub_dist <- subset(delta_meth, chr_pos %in% delta_meth_n_dist$chr_pos)
length(unique(delta_meth_sub_dist$chr_pos)) # 760 sites

delta_meth_dist_ls <- delta_meth_sub_dist %>% group_split(chr_pos)

# repeat for attendance and fighting rate

```

At this stage, we have the 1,026 CpG sites.

## Function to run the model {#sec-model-trait}

You can find the full function below, but importantly this is the LMM formula I run for each CpG site for each trait:

`lmgerTest::lmer(delta_meth ~ scale(trait) + methperc_pre + (1|site/id))`

Within the function, we can define if we want to include pre-lekking methylation % or not by setting the 'pre' arument to "control" or "no_control" respectively.

```{r function, eval=F}
#| code-fold: true
# function to run the model
function_model_delta <- function(df, parameter, pre){tryCatch({
  chr_pos <- as.character(df[1,1])
  df <- as.data.frame(df)
  df$methperc_pre_scl <- scale(df$methperc_pre)

  if (pre == "control"){
  formula <- formula(paste0("delta_meth ~ ", parameter, "_scl + methperc_pre + (1|site/id) "))}

  if (pre == "no_control"){
  formula <- formula(paste0("delta_meth ~ ", parameter, "_scl + (1|site/id) "))}
  
  model <- lmerTest::lmer(formula, data=df)
  summary <- summary(model)
  
  overdisp.lmer_fun <- function(model) {
    vpars <- function(m) {
      nrow(m)*(nrow(m)+1)/2
    }
    model.df <- sum(sapply(VarCorr(model),vpars))+length(fixef(model))
    rdf <- nrow(model.frame(model))-model.df
    rp <- residuals(model,type="pearson")
    Pearson.chisq <- sum(rp^2)
    prat <- Pearson.chisq/rdf
    pval <- pchisq(Pearson.chisq, df=rdf, lower.tail=FALSE)
    data.frame(chisq=Pearson.chisq,ratio=prat,rdf=rdf,p=pval)
  }
  
  intercept = summary$coefficients["(Intercept)", "Estimate"]

  #fixed effect
  parameter_estimate <- summary$coefficients[2,1]
  parameter_se <- summary$coefficients[2,2]
  parameter_df <- summary$coefficients[2,3]
  parameter_tval <- summary$coefficients[2,4]
  parameter_pval <- summary$coefficients[2,5]

  if (pre == "control"){
  #premeth effect
    pre_estimate <- summary$coefficients["methperc_pre", "Estimate"]
    pre_se <- summary$coefficients["methperc_pre", "Std. Error"]
    pre_df <- summary$coefficients["methperc_pre", "df"]
    pre_tval <- summary$coefficients["methperc_pre", "t value"]
    pre_pval <- summary$coefficients["methperc_pre", "Pr(>|t|)"]
    }

  if (pre == "no_control"){
    pre_estimate <- NA
    pre_se <- NA
    pre_df <- NA
    pre_tval <- NA
    pre_pval <- NA
    }
  
  rsqc <- performance::r2(model)$R2_conditional #fixed plus random parameterects relative to overall variance
  rsqm <- performance::r2(model)$R2_marginal #fixed parameterects relative to overall variance
  
  dispersion.chisq <- overdisp.lmer_fun(model)[1,1]
  dispersion.ratio <- overdisp.lmer_fun(model)[1,2]
  dispersion.rdf <- overdisp.lmer_fun(model)[1,3]
  dispersion.pval <- overdisp.lmer_fun(model)[1,4]
  
  isSingular <- isSingular(model)

  if(is.null(summary(model)$optinfo$conv$lme4$messages )){
    convergence <- NA
  }

  if(!is.null(summary(model)$optinfo$conv$lme4$messages )){
    convergence <- summary(model)$optinfo$conv$lme4$messages
  }

  icc_id_site <-icc(model, by_group = TRUE, tolerance = 0)[1,2]
  icc_site <-icc(model, by_group = TRUE, tolerance = 0)[2,2]
  
  return(data.frame(chr_pos=as.factor(chr_pos),
                    parameter = as.factor(parameter),
                    intercept = as.numeric(intercept),
                    icc_id_site = as.numeric(icc_id_site),
                    icc_site = as.numeric(icc_site),
                    parameter_estimate = as.numeric(parameter_estimate),
                    parameter_se = as.numeric(parameter_se),
                    parameter_df = as.numeric(parameter_df),
                    parameter_tval = as.numeric(parameter_tval),
                    parameter_pval = as.numeric(parameter_pval),
                    pre_estimate = as.numeric(pre_estimate),
                    pre_se = as.numeric(pre_se),
                    pre_df = as.numeric(pre_df),
                    pre_tval = as.numeric(pre_tval),
                    pre_pval = as.numeric(pre_pval),
                    rsqc = as.numeric(rsqc),
                    rsqm = as.numeric(rsqm),
                    dispersion.chisq = as.numeric(dispersion.chisq),
                    dispersion.ratio = as.numeric(dispersion.ratio),
                    dispersion.rdf = as.numeric(dispersion.rdf),
                    dispersion.pval = as.numeric(dispersion.pval),
                    isSingular = as.logical(isSingular),
                    convergence = convergence
                    
  ))
}, error = function(e){cat("ERROR :", conditionMessage(e), "\n");print(paste0(chr_pos, " ", conditionMessage(e)))})
}

```

## Run the model per trait

```{r run_model_example, echo=T, eval=F}
source("scripts/function_models.R") 
# the function function_model_delta_pheno runs the model
# the function function_process_model contains a collector function that puts all data in a dataframe, excludes models with convergence errors,
# plots overdispersion, optionally filters for overdispersion (95 percentile), applies an FDR-correction,
# makes a volcano plot, and saves all these data

```

In this function, we do the following (in this order):

*Convert the list into a dataframe
`data <- do.call(rbind.data.frame, list)` 

*Exclude models with convergence errors
`data <- subset(data, !grepl("converge", convergence))`

*Create histograms of the overdispersion ratio and p-value 
`ggplot(data, aes(x = dispersion.ratio)) + geom_histogram()` 

`ggplot(data, aes(x = parameter_pval))+ geom_histogram()`

*Optionally exclude models with an overdispersion ratio higher than the 95 percentile (not done for any as there was no overdispersion)

*FDR correction
`data$parameter_qval <- p.adjust(data$parameter_pval, method = "fdr", n = nrow(data))`

* Create a volcano plot where the model *beta* estimate is on the x-axis
`ggplot(data, aes(x = parameter_estimate, y = -log10(parameter_qval))) + geom_point(aes(col = sig))`


### Attendance
808 CpG sites had enough phenotypic and epigenetic data to run the attendance model (after filtering for n > 20).

#### With pre-lekking
```{r, attend_withpre, echo=T, eval=F}
#| code-fold: true
m_attend_pre <- parallel::mclapply(delta_meth_attend_ls, function_model_delta_pheno, parameter="attend", pre="control", mc.cores=4)
m_attend_pre_out <- function_process_model(m_attend_pre, dir_plots = "plots/model_out/effort", dir_data = "results/modeloutput/effort",
                                            name_file = "attend_with_pre", pretty_name = "Attendance", filter_disp=FALSE) # n sig = 3


```

![Histogram dispersion and p-value: attendance with pre-methylation](../plots/model_out/effort/hist_raw_disp_pval_attend_with_pre.png)
![Volcano plot: attendance with pre-methylation](../plots/model_out/effort/volcano_attend_with_pre.png)
![Raw data: attendance with pre-methylation CpG 1](../plots/model_out/effort/raw/attend_with_pre_1.png)
![Raw data: attendance with pre-methylation CpG 2](../plots/model_out/effort/raw/attend_with_pre_1.png)
![Raw data: attendance with pre-methylation CpG 3](../plots/model_out/effort/raw/attend_with_pre_1.png)

CpG site "ScEsiA3_17655__HRSCAF_20552_371333" is located in an upstream region (gene ID ANN24887, similar to GPR87).

CpG site "ScEsiA3_18278__HRSCAF_21663_133779007" is located in a gene body, exon, upstream and 5'UTR region (gene ID ANN06030 (unknown function)). This is the same CpG site that is associated with changes in body mass (when including pre-lekking meth %)!

CpG site "ScEsiA3_18752__HRSCAF_22883_2574288" is located in an up- and downstream region (gene ID ANN31167 similar to PPP2R2A)

::: {.callout-caution collapse="true"}
PPP2R2A: The product of this gene belongs to the phosphatase 2 regulatory subunit B family. Protein phosphatase 2 is one of the four major Ser/Thr phosphatases, and it is implicated in the negative control of cell growth and division. It consists of a common heteromeric core enzyme, which is composed of a catalytic subunit and a constant regulatory subunit, that associates with a variety of regulatory subunits. The B regulatory subunit might modulate substrate selectivity and catalytic activity. This gene encodes an alpha isoform of the regulatory subunit B55 subfamily. Alternatively spliced transcript variants have been described. [provided by RefSeq, Apr 2010]
:::

#### Without pre-lekking

```{r, attend_nopre, echo=T, eval=F}
#| code-fold: true
m_attend_no_pre <- parallel::mclapply(delta_meth_ls, function_model_delta_pheno, parameter="attend", pre="no_control", mc.cores=4)
m_attend_no_pre_out <- function_process_model(m_attend_no_pre, dir_plots = "plots/model_out/effort", dir_data = "results/modeloutput/effort",
                                            name_file = "attend_no_pre", pretty_name = "Attendance", filter_disp=FALSE) # n sig = 0

```

![Histogram dispersion and p-value: attendance no pre-methylation](../plots/model_out/effort/hist_raw_disp_pval_attend_no_pre.png)

![Volcano plot: attendance no pre-methylation](../plots/model_out/effort/volcano_attend_no_pre.png)

### Fighting

466 CpG sites had enough phenotypic and epigenetic data to run the fighting model (after filtering for n > 20).

#### Without pre-lekking

```{r, fight_withpre, echo=T, eval=F}
#| code-fold: true
m_fight_pre <- parallel::mclapply(delta_meth_fight_ls, function_model_delta_pheno, parameter="fight", pre="control", mc.cores=4)
m_fight_pre_out <- function_process_model(m_fight_pre, dir_plots = "plots/model_out/effort", dir_data = "results/modeloutput/effort",
                                            name_file = "fight_with_pre", pretty_name = "Centrality", filter_disp=FALSE) # n sig = 3

```

![Histogram dispersion and p-value: fighting rate with pre-methylation](../plots/model_out/effort/hist_raw_disp_pval_fight_no_pre.png)

![Volcano plot: fighting rate with pre-methylation](../plots/model_out/effort/volcano_fight_with_pre.png)

![Raw data: fighting rate with pre-methylation CpG 1](../plots/model_out/effort/raw/fight_with_pre_1.png)

![Raw data: fighting rate with pre-methylation CpG 2](../plots/model_out/effort/raw/fight_with_pre_2.png)

![Raw data: fighting rate with pre-methylation CpG 3](../plots/model_out/effort/raw/fight_with_pre_3.png)

CpG site "ScEsiA3_15486__HRSCAF_17393_6262304" is located in a gene body, exon and upstream region (gene ID ANN19414, similar to Rad9a).

::: {.callout-caution collapse="true"}
Rad9a: This gene product is highly similar to Schizosaccharomyces pombe rad9, a cell cycle checkpoint protein required for cell cycle arrest and DNA damage repair. This protein possesses 3' to 5' exonuclease activity, which may contribute to its role in sensing and repairing DNA damage. It forms a checkpoint protein complex with RAD1 and HUS1. This complex is recruited by checkpoint protein RAD17 to the sites of DNA damage, which is thought to be important for triggering the checkpoint-signaling cascade. Alternatively spliced transcript variants encoding different isoforms have been found for this gene. [provided by RefSeq, Aug 2011]
:::

CpG site "ScEsiA3_18290__HRSCAF_21698_5473558" is located in an upstream region (gene ID ANN29135, similar to SLC38A10).

::: {.callout-caution collapse="true"}
SLC38A10: Predicted to enable amino acid transmembrane transporter activity. Predicted to be involved in amino acid transmembrane transport. Predicted to act upstream of or within bone development. Located in Golgi apparatus. [provided by Alliance of Genome Resources, Apr 2022]
:::

CpG site "ScEsiA3_21978__HRSCAF_26928_5532732" is located in a gene body, intron and upstream region (gene IDs ANN24559 similar to TRAK1, and ANN24561 similar to Fkbp10)

::: {.callout-caution collapse="true"}
TRAK1: Predicted to enable GABA receptor binding activity and myosin binding activity. Involved in endosome to lysosome transport. Located in early endosome and mitochondrion. Implicated in developmental and epileptic encephalopathy 68. [provided by Alliance of Genome Resources, Apr 2022]

Fkbp10: The protein encoded by this gene belongs to the FKBP-type peptidyl-prolyl cis/trans isomerase (PPIase) family. This protein localizes to the endoplasmic reticulum and acts as a molecular chaperone. Alternatively spliced variants encoding different isoforms have been reported, but their biological validity has not been determined.[provided by RefSeq, Nov 2009]
:::

#### Without pre-lekking

```{r, fight_nopre, echo=T, eval=F}
#| code-fold: true
m_fight_no_pre <- parallel::mclapply(delta_meth_ls, function_model_delta_pheno, parameter="fight", pre="no_control", mc.cores=4)
m_fight_no_pre_out <- function_process_model(m_fight_no_pre, dir_plots = "plots/model_out/effort", dir_data = "results/modeloutput/effort",
                                            name_file = "fight_no_pre", pretty_name = "Fighting", filter_disp=FALSE) # 0 sig

```

![Histogram dispersion and p-value: fighting rate no pre-methylation](../plots/model_out/effort/hist_raw_disp_pval_fight_no_pre.png)

![Volcano plot: fighting rate no pre-methylation](../plots/model_out/effort/volcano_fight_no_pre.png)

### Centrality
760 CpG sites had enough phenotypic and epigenetic data to run the centrality model (after filtering for n > 20).

#### With pre-lekking

```{r, centrality_withpre, echo=T, eval=F}
#| code-fold: true
m_dist_pre <- parallel::mclapply(delta_meth_ls, function_model_delta_pheno, parameter="dist", pre="control", mc.cores=4)
m_dist_pre_out <- function_process_model(m_dist_pre, dir_plots = "plots/model_out/effort", dir_data = "results/modeloutput/effort",
                                            name_file = "dist_with_pre", pretty_name = "Centrality", filter_disp=FALSE) # n sig = 1 

```

![Histogram dispersion and p-value: centrality with pre-methylation](../plots/model_out/effort/hist_raw_disp_pval_dist_with_pre.png)

![Volcano plot: centrality with pre-methylation](../plots/model_out/effort/volcano_dist_with_pre.png)

![Raw data: centrality with pre-methylation CpG 1](../plots/model_out/effort/raw/dist_with_pre_1.png)

CpG site "ScEsiA3_21979__HRSCAF_26929_1282292" is located in an upstream region (gene ID ANN27654 similar to NFIC). Note that this is the same site that is significantly associated with delta IgG!!

::: {.callout-caution collapse="true"}
NFIC: The protein encoded by this gene belongs to the CTF/NF-I family. These are dimeric DNA-binding proteins, and function as cellular transcription factors and as replication factors for adenovirus DNA replication. Alternatively spliced transcript variants encoding different isoforms have been described for this gene. [provided by RefSeq, Oct 2011]
:::

### Without pre-lekking

```{r, centrality_nopre, echo=T, eval=F}
#| code-fold: true
m_dist_no_pre <- parallel::mclapply(delta_meth_ls, function_model_delta_pheno, parameter="dist", pre="no_control", mc.cores=4)
m_dist_no_pre_out <- function_process_model(m_dist_no_pre, dir_plots = "plots/model_out/effort", dir_data = "results/modeloutput/effort",
                                            name_file = "dist_no_pre", pretty_name = "Centrality", filter_disp=FALSE) # n sig = 1

```

This CpG site is the same one that was significant as the model run with pre-methylation.

![Histogram dispersion and p-value: centrality no pre-methylation](../plots/model_out/effort/hist_raw_disp_pval_dist_no_pre.png)

![Volcano plot: centrality no pre-methylation](../plots/model_out/effort/volcano_dist_no_pre.png)

![Raw data: centrality no pre-methylation CpG 1](../plots/model_out/effort/raw/dist_no_pre_1.png)

This is the same CpG site that was significant in the model with pre-lekking methylation %

## Concluding remarks

So it seems like very litte CpG methylation changes are associated with reproductive effort. When we do not control for pre-lekking methylation %, we don't find anything significant for attendance and fighting rate, and we find the same single CpG significant for centrality that is significant in the model where we do control for pre-lekking methylation. We find 3, 3, and 1 significant CpG site for lek attendance, fighting rate and centrality respectively in the models where we do control for pre-lekking methylation. 
