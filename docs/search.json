[
  {
    "objectID": "qmd/1_filter.html",
    "href": "qmd/1_filter.html",
    "title": "2  Preparing and filtering the data",
    "section": "",
    "text": "Our dataset consists of 116 samples that have been epi-genotyped using epiGBS2. The samples are part of a bigger dataset consisting of 450 epiGBS samples, and therefore have been sequenced across 10 libraries of 22 samples each.\nFirst, we use a custom bash script to merge the two strands of each sample together, and subsequently filter for 10X over those merged strands. This contrasts methylKit, where we would first filter for 10X for each two strands before merging them together. Next, we load these merged strands into R using methlKit.\n\n\nCode\nltet_meth &lt;- methRead(files, pipeline = \"bismarkCytosineReport\",\n                      sample.id = ids, assembly = \"ltet\", \n                      treatment = c(rep(1, each =length(ids))), context = \"CpG\",\n                      sep = \" \")\n\n\nWhere files = the list of 116 file locations and ids = the list of the 116 ID’s of those files.\nNext, we perform a set of filtering steps. First, we filter by coverage, setting the minimum to 10X and a maximum of the 99.9 percentile\n\n\nCode\nltet_meth &lt;- filterByCoverage(ltet_meth,lo.count=10,lo.perc=NULL,\n                                    hi.count=NULL,hi.perc=99.9)   \n\n\nNext, we unite the strands while only keeping CpG sites that are covered in at least 75% of all individuals.\n\n\nCode\nltet_meth_unite_0.75 &lt;- methylKit::unite(ltet_meth, destrand = TRUE, \n                                    min.per.group = as.integer(0.75*length(ids)), mc.cores = 8)\n\n\nThe next step is a custom R script that converts the output of the “unite” call to a long dataframe, where each line is a CpG site per individual and in the columns we have CpG site, nC, nT, cov, %meth. Moreover, in this script we remove CpG sites that are nonvariant, meaning that they are either 100% methylated in all samples or 0% methylated. This dataframe can be used for fitting models.\n\n\nCode\nsource(\"scripts/function_convert_methfile.R\")\n\nprepost_long &lt;- convert_meth(methfile = ltet_meth_unite_0.75, novar = \"remove\") \n\n#Out of 274,197 CpG sites, kept 274,188 which is 1% removed due to invariance"
  },
  {
    "objectID": "qmd/5_physio_meth.html",
    "href": "qmd/5_physio_meth.html",
    "title": "6  Which changes in CpG site methylation are associated with changes in physiology?",
    "section": "",
    "text": "Similar to the previous section, we next test which CpG site changes are significantly associated with changes in physiology. Physiological measures that we focus on include parasites (Microfilaria spp. and Trypanosoma spp.), body mass, IgG and HCT.\nAgain, we build a GLMM per CpG site to identify CpG sites whose DNA methylation change is associated with changes in physiology. For each CpG site for each trait, we build a model that predicts the changes DNA methylation, while fitting the change in physiology as a fixed effect as well as age and pre-lekking methylation level.\n\n\nCode\n### load packages\npacman::p_load(tidyverse, data.table, tibble, performance, matrixStats, \n               parallel, performance, lmerTest, tidystats, insight)\n\n### load data\n\nload(file = \"results/modeloutput/subset_sites_sig_deltameth.RData\")\n\n### load phenotypic data\n\nload(\"data/phenotypes/fulldata_complete_epi_withdates.RData\")\nload(\"data/phenotypes/pheno_dif_prepost.RData\")\n\n#combine with site info\n\ndelta_meth &lt;- left_join(delta_meth, unique(all_pheno_epi[,c(\"id\", \"year\", \"site\", \"Core\")], by = c(\"id\", \"year\")))\n\n#combine with delta physiology\nprepost_dif$mass_dif_scl &lt;- scale(prepost_dif$mass_dif)\nprepost_dif$microf_dif_scl &lt;- scale(prepost_dif$microf_dif)\nprepost_dif$trypa_dif_scl &lt;- scale(prepost_dif$trypa_dif)\nprepost_dif$ig_dif_scl &lt;- scale(prepost_dif$ig_dif)\nprepost_dif$hct_dif_scl &lt;- scale(prepost_dif$hct_dif)\n\ndelta_meth &lt;- left_join(delta_meth, unique(prepost_dif[,c(\"id\", \"year\", \"mass_dif_scl\", \"microf_dif_scl\", \"trypa_dif_scl\", \"ig_dif_scl\", \"hct_dif_scl\")], by = c(\"id\", \"year\")))\n\ndelta_meth_ls &lt;- delta_meth %&gt;% group_split(chr_pos)\n\n# function to run the model\nfunction_model_delta &lt;- function(df, parameter){tryCatch({\n  chr_pos &lt;- as.character(df[1,1])\n  df &lt;- as.data.frame(df)\n  df$methperc_pre_scl &lt;- scale(df$methperc_pre)\n\n  formula &lt;- formula(paste0(\"scale(delta_meth) ~ \", parameter, \"_dif_scl + age + scale(methperc_pre) + (1|site/id) \"))\n  \n  model &lt;- lmerTest::lmer(formula, data=df)\n  summary &lt;- summary(model)\n  \n  overdisp.lmer_fun &lt;- function(model) {\n    vpars &lt;- function(m) {\n      nrow(m)*(nrow(m)+1)/2\n    }\n    model.df &lt;- sum(sapply(VarCorr(model),vpars))+length(fixef(model))\n    rdf &lt;- nrow(model.frame(model))-model.df\n    rp &lt;- residuals(model,type=\"pearson\")\n    Pearson.chisq &lt;- sum(rp^2)\n    prat &lt;- Pearson.chisq/rdf\n    pval &lt;- pchisq(Pearson.chisq, df=rdf, lower.tail=FALSE)\n    data.frame(chisq=Pearson.chisq,ratio=prat,rdf=rdf,p=pval)\n  }\n  \n  #fixed effect\n  parameter_estimate &lt;- summary$coefficients[2,1]\n  parameter_se &lt;- summary$coefficients[2,2]\n  parameter_df &lt;- summary$coefficients[2,3]\n  parameter_tval &lt;- summary$coefficients[2,4]\n  parameter_pval &lt;- summary$coefficients[2,5]\n  \n  #age effect\n  age_estimate &lt;- summary$coefficients[\"age\", \"Estimate\"]\n  age_se &lt;- summary$coefficients[\"age\", \"Std. Error\"]\n  age_df &lt;- summary$coefficients[\"age\", \"df\"]\n  age_tval &lt;- summary$coefficients[\"age\", \"t value\"]\n  age_pval &lt;- summary$coefficients[\"age\", \"Pr(&gt;|t|)\"]\n  \n  #premeth effect\n  pre_estimate &lt;- summary$coefficients[\"scale(methperc_pre)\", \"Estimate\"]\n  pre_se &lt;- summary$coefficients[\"scale(methperc_pre)\", \"Std. Error\"]\n  pre_df &lt;- summary$coefficients[\"scale(methperc_pre)\", \"df\"]\n  pre_tval &lt;- summary$coefficients[\"scale(methperc_pre)\", \"t value\"]\n  pre_pval &lt;- summary$coefficients[\"scale(methperc_pre)\", \"Pr(&gt;|t|)\"]\n  \n  rsqc &lt;- performance::r2(model)$R2_conditional #fixed plus random parameterects relative to overall variance\n  rsqm &lt;- performance::r2(model)$R2_marginal #fixed parameterects relative to overall variance\n  \n  dispersion.chisq &lt;- overdisp.lmer_fun(model)[1,1]\n  dispersion.ratio &lt;- overdisp.lmer_fun(model)[1,2]\n  dispersion.rdf &lt;- overdisp.lmer_fun(model)[1,3]\n  dispersion.pval &lt;- overdisp.lmer_fun(model)[1,4]\n  \n  isSingular &lt;- isSingular(model)\n  \n  icc_id_site &lt;-icc(model, by_group = TRUE, tolerance = 0)[1,2]\n  icc_site &lt;-icc(model, by_group = TRUE, tolerance = 0)[2,2]\n  \n  return(data.frame(chr_pos=as.factor(chr_pos),\n                    parameter = as.factor(parameter),\n                    icc_id_site = as.numeric(icc_id_site),\n                    icc_site = as.numeric(icc_site),\n                    parameter_estimate = as.numeric(parameter_estimate),\n                    parameter_se = as.numeric(parameter_se),\n                    parameter_df = as.numeric(parameter_df),\n                    parameter_tval = as.numeric(parameter_tval),\n                    parameter_pval = as.numeric(parameter_pval),\n                    age_estimate = as.numeric(age_estimate),\n                    age_se = as.numeric(age_se),\n                    age_df = as.numeric(age_df),\n                    age_tval = as.numeric(age_tval),\n                    age_pval = as.numeric(age_pval),\n                    pre_estimate = as.numeric(pre_estimate),\n                    pre_se = as.numeric(pre_se),\n                    pre_df = as.numeric(pre_df),\n                    pre_tval = as.numeric(pre_tval),\n                    pre_pval = as.numeric(pre_pval),\n                    rsqc = as.numeric(rsqc),\n                    rsqm = as.numeric(rsqm),\n                    dispersion.chisq = as.numeric(dispersion.chisq),\n                    dispersion.ratio = as.numeric(dispersion.ratio),\n                    dispersion.rdf = as.numeric(dispersion.rdf),\n                    dispersion.pval = as.numeric(dispersion.pval),\n                    isSingular = as.logical(isSingular)\n                    \n  ))\n}, error = function(e){cat(\"ERROR :\", conditionMessage(e), \"\\n\");print(chr_pos)})\n}\n\n### run the model per trait\n\n### mass\n# run model\ndelta_out_mass &lt;- parallel::mclapply(delta_meth_ls, function_model_delta, parameter=\"mass\",mc.cores=12)\ndelta_out_mass &lt;- do.call(rbind.data.frame, delta_out_mass)\n\n# convert to numeric\ndelta_out_mass$parameter_pval &lt;- as.numeric(delta_out_mass$parameter_pval)\ndelta_out_mass$age_pval &lt;- as.numeric(delta_out_mass$age_pval)\n\n# exclude those with overdispersion\ndelta_out_mass &lt;- subset(delta_out_mass, dispersion.ratio &lt; 1.1 & dispersion.pval &gt; 0.05)\n\n# FDR correction\ndelta_out_mass$parameter_qval &lt;- p.adjust(delta_out_mass$parameter_pval, method = \"fdr\", n = nrow(delta_out_mass))\n\ndelta_out_mass$age_qval &lt;- p.adjust(delta_out_mass$age_pval, method = \"fdr\", n = nrow(delta_out_mass))\n\n### microf\n# run model\ndelta_out_microf &lt;- parallel::mclapply(delta_meth_ls, function_model_delta, parameter=\"microf\",mc.cores=12)\ndelta_out_microf &lt;- do.call(rbind.data.frame, delta_out_microf)\n\n# to numeric\ndelta_out_microf$parameter_pval &lt;- as.numeric(delta_out_microf$parameter_pval)\ndelta_out_microf$age_pval &lt;- as.numeric(delta_out_microf$age_pval)\n\n# exclude overdispersion\ndelta_out_microf &lt;- subset(delta_out_microf, isSingular == FALSE & dispersion.ratio &lt; 1.1 & dispersion.pval &gt; 0.05)\n\n# FDR correction\ndelta_out_microf$parameter_qval &lt;- p.adjust(delta_out_microf$parameter_pval, method = \"fdr\", n = nrow(delta_out_microf))\ndelta_out_microf$age_qval &lt;- p.adjust(delta_out_microf$age_pval, method = \"fdr\", n = nrow(delta_out_microf))\n\n### trypa\n# run model\ndelta_out_trypa &lt;- parallel::mclapply(delta_meth_ls, function_model_delta, parameter=\"trypa\",mc.cores=12)\ndelta_out_trypa &lt;- do.call(rbind.data.frame, delta_out_trypa)\n\n# as numeric\ndelta_out_trypa$parameter_pval &lt;- as.numeric(delta_out_trypa$parameter_pval)\ndelta_out_trypa$age_pval &lt;- as.numeric(delta_out_trypa$age_pval)\n\n# exclude overdispersion\ndelta_out_trypa &lt;- subset(delta_out_trypa, dispersion.ratio &lt; 1.1 & dispersion.pval &gt; 0.05)\n\n# FDR correction\ndelta_out_trypa$parameter_qval &lt;- p.adjust(delta_out_trypa$parameter_pval, method = \"fdr\", n = nrow(delta_out_trypa))\ndelta_out_trypa$age_qval &lt;- p.adjust(delta_out_trypa$age_pval, method = \"fdr\", n = nrow(delta_out_trypa))\n\n### ig\n# run model\ndelta_out_ig &lt;- parallel::mclapply(delta_meth_ls, function_model_delta, parameter=\"ig\",mc.cores=12)\ndelta_out_ig &lt;- do.call(rbind.data.frame, delta_out_ig)\n\n# as numeric\ndelta_out_ig$parameter_pval &lt;- as.numeric(delta_out_ig$parameter_pval)\ndelta_out_ig$age_pval &lt;- as.numeric(delta_out_ig$age_pval)\n\n# exclude overdispersion\ndelta_out_ig &lt;- subset(delta_out_ig, dispersion.ratio &lt; 1.1 & dispersion.pval &gt; 0.05)\n\n# FDR correction\ndelta_out_ig$parameter_qval &lt;- p.adjust(delta_out_ig$parameter_pval, method = \"fdr\", n = nrow(delta_out_ig))\ndelta_out_ig$age_qval &lt;- p.adjust(delta_out_ig$age_pval, method = \"fdr\", n = nrow(delta_out_ig))\n\n### hct\n# run model\ndelta_out_hct &lt;- parallel::mclapply(delta_meth_ls, function_model_delta, parameter=\"hct\",mc.cores=12)\ndelta_out_hct &lt;- do.call(rbind.data.frame, delta_out_hct)\n\n# as numeric\ndelta_out_hct$parameter_pval &lt;- as.numeric(delta_out_hct$parameter_pval)\ndelta_out_hct$age_pval &lt;- as.numeric(delta_out_hct$age_pval)\n\n# exclude overdispersion\ndelta_out_hct &lt;- subset(delta_out_hct, dispersion.ratio &lt; 1.1 & dispersion.pval &gt; 0.05)\n\n# FDR correction\ndelta_out_hct$parameter_qval &lt;- p.adjust(delta_out_hct$parameter_pval, method = \"fdr\", n = nrow(delta_out_hct))\ndelta_out_hct$age_qval &lt;- p.adjust(delta_out_hct$age_pval, method = \"fdr\", n = nrow(delta_out_hct))\n\n### combine\ndelta_out_all &lt;- rbind(delta_out_mass, delta_out_microf, delta_out_trypa, delta_out_ig, delta_out_hct)\ndelta_out_all$chr_pos &lt;- as.factor(delta_out_all$chr_pos)\ndelta_out_all$parameter &lt;- as.factor(delta_out_all$parameter)\ndelta_out_all$isSingular &lt;- as.logical(delta_out_all$isSingular)\ndelta_out_all[c(3:25, 27,28)] &lt;- lapply(delta_out_all[c(3:25, 27:28)], as.numeric)\n\nsave(delta_out_all, file=\"results/modeloutput/physio_deltameth_modeloutput_filtered.RData\")\n\n\nAfter also subsetting for at least an (absolute) estimate of 0.1, there is one significant CpG for delta Microfilaria spp, 29 for delta Trypanosoma spp. and 13 for delta IgG. As there are so many, I will only show the plots of the three most significant ones, also because not all raw data plots are as convincing.\n\n\n\nRaw data delta Microfilaria\n\n\n  \n  \nIt seems like most associations are shaped by a few outliers and that most CpG sites do not actually change (delta meth = 0)."
  },
  {
    "objectID": "qmd/6_fitness_meth.html",
    "href": "qmd/6_fitness_meth.html",
    "title": "7  Which changes in CpG site methylation are associated with reproductive effort?",
    "section": "",
    "text": "In this script, we test for which CpG site changes are significantly associated with fitness, measured as annual mating success (AMS) and survival to the next year.\nWe build two GLMMs per CpG site, one for AMS and one for survival, to identify CpG sites whose DNA methylation change is associated with fitness. In these models, we predict AMS and survival, and include delta methylation as a fixed effect, as well as age and pre-lekking methylation.\n\n\nCode\n### load packages\npacman::p_load(tidyverse, data.table, tibble, performance, matrixStats, \n               parallel, performance, lmerTest, tidystats, insight, glmmTMB)\n\n### load data\n\nload(file = \"results/modeloutput/subset_sites_sig_deltameth.RData\")\n\n### load phenotypic data\n\nload(\"data/phenotypes/fulldata_complete_epi_withdates.RData\")\n\n#combine with site and fitness data\npheno_pre &lt;- subset(all_pheno_epi, prepost==\"pre\")\n\ndelta_meth &lt;- left_join(delta_meth, unique(pheno_pre[,c(\"id\", \"year\", \"MS\", \"surv\")]), by = c(\"id\", \"year\"))\n                                           \ndelta_meth_ls &lt;- delta_meth %&gt;% group_split(chr_pos)\n\n# function to run the model\nfunction_model_fitness &lt;- function(df){tryCatch({\n  chr_pos &lt;- as.character(df[1,1])\n  df &lt;- as.data.frame(df)\n  df$site &lt;- as.factor(df$site)\n  df$id &lt;- as.factor(df$id)\n  \n  ### AMS\n  formula_ams &lt;- formula(paste0(\"MS ~ scale(delta_meth) + age + scale(methperc_pre) + (1|site/id) \"))\n  model_ams &lt;- glmmTMB(formula_ams, data=df, family = \"poisson\", ziformula=~1)\n  summary_ams &lt;- summary(model_ams)\n  \n  #fixed effect\n  parameter_estimate &lt;- summary_ams$coefficients$cond[\"scale(delta_meth)\", \"Estimate\"]\n  parameter_se &lt;- summary_ams$coefficients$cond[\"scale(delta_meth)\",\"Std. Error\"]\n  parameter_zval &lt;- summary_ams$coefficients$cond[\"scale(delta_meth)\",\"z value\"]\n  parameter_pval &lt;- summary_ams$coefficients$cond[\"scale(delta_meth)\", \"Pr(&gt;|z|)\"]\n  \n  #age effect\n  age_estimate &lt;- summary_ams$coefficients$cond[\"age\", \"Estimate\"]\n  age_se &lt;- summary_ams$coefficients$cond[\"age\", \"Std. Error\"]\n  age_zval &lt;- summary_ams$coefficients$cond[\"age\", \"z value\"]\n  age_pval &lt;- summary_ams$coefficients$cond[\"age\", \"Pr(&gt;|z|)\"]\n  \n  #premeth effect\n  pre_estimate &lt;- summary_ams$coefficients$cond[\"scale(methperc_pre)\", \"Estimate\"]\n  pre_se &lt;- summary_ams$coefficients$cond[\"scale(methperc_pre)\", \"Std. Error\"]\n  pre_zval &lt;- summary_ams$coefficients$cond[\"scale(methperc_pre)\", \"z value\"]\n  pre_pval &lt;- summary_ams$coefficients$cond[\"scale(methperc_pre)\", \"Pr(&gt;|z|)\"]\n  \n  rsqc &lt;- performance::r2(model_ams)$R2_conditional #fixed plus random parameterects relative to overall variance\n  rsqm &lt;- performance::r2(model_ams)$R2_marginal #fixed parameterects relative to overall variance\n  \n  message &lt;- model_ams$fit$message\n  \n  icc_id_site &lt;-icc(model_ams, by_group = TRUE, tolerance = 0)[1,2]\n  icc_site &lt;-icc(model_ams, by_group = TRUE, tolerance = 0)[2,2]\n  \n \n  ams &lt;- data.frame(chr_pos=as.factor(chr_pos),\n                    ams_icc_id_site = as.numeric(icc_id_site),\n                    ams_icc_site = as.numeric(icc_site),\n                    ams_delta_meth_estimate = as.numeric(parameter_estimate),\n                    ams_delta_meth_se = as.numeric(parameter_se),\n                    ams_delta_meth_zval = as.numeric(parameter_zval),\n                    ams_delta_meth_pval = as.numeric(parameter_pval),\n                    ams_age_estimate = as.numeric(age_estimate),\n                    ams_age_se = as.numeric(age_se),\n                    ams_age_zval = as.numeric(age_zval),\n                    ams_age_pval = as.numeric(age_pval),\n                    ams_pre_estimate = as.numeric(pre_estimate),\n                    ams_pre_se = as.numeric(pre_se),\n                    ams_pre_zval = as.numeric(pre_zval),\n                    ams_pre_pval = as.numeric(pre_pval),\n                    ams_rsqc = as.numeric(rsqc),\n                    ams_rsqm = as.numeric(rsqm),\n                    ams_message = message              \n  ) \n  \n  ### surv\n  formula_surv &lt;- formula(paste0(\"surv ~ scale(delta_meth) + age + scale(methperc_pre) + (1|site/id) \"))\n  model_surv &lt;- glmmTMB(formula_surv, data=df, family = \"binomial\")\n  summary_surv &lt;- summary(model_surv)\n  \n  #fixed effect\n  parameter_estimate &lt;- summary_surv$coefficients$cond[\"scale(delta_meth)\", \"Estimate\"]\n  parameter_se &lt;- summary_surv$coefficients$cond[\"scale(delta_meth)\",\"Std. Error\"]\n  parameter_zval &lt;- summary_surv$coefficients$cond[\"scale(delta_meth)\",\"z value\"]\n  parameter_pval &lt;- summary_surv$coefficients$cond[\"scale(delta_meth)\", \"Pr(&gt;|z|)\"]\n  \n  #age effect\n  age_estimate &lt;- summary_surv$coefficients$cond[\"age\", \"Estimate\"]\n  age_se &lt;- summary_surv$coefficients$cond[\"age\", \"Std. Error\"]\n  age_zval &lt;- summary_surv$coefficients$cond[\"age\", \"z value\"]\n  age_pval &lt;- summary_surv$coefficients$cond[\"age\", \"Pr(&gt;|z|)\"]\n  \n  #premeth effect\n  pre_estimate &lt;- summary_surv$coefficients$cond[\"scale(methperc_pre)\", \"Estimate\"]\n  pre_se &lt;- summary_surv$coefficients$cond[\"scale(methperc_pre)\", \"Std. Error\"]\n  pre_zval &lt;- summary_surv$coefficients$cond[\"scale(methperc_pre)\", \"z value\"]\n  pre_pval &lt;- summary_surv$coefficients$cond[\"scale(methperc_pre)\", \"Pr(&gt;|z|)\"]\n  \n  rsqc &lt;- performance::r2(model_surv)$R2_conditional #fixed plus random parameterects relative to overall variance\n  rsqm &lt;- performance::r2(model_surv)$R2_marginal #fixed parameterects relative to overall variance\n  \n  message &lt;- model_surv$fit$message\n  \n  icc_id_site &lt;-icc(model_surv, by_group = TRUE, tolerance = 0)[1,2]\n  icc_site &lt;-icc(model_surv, by_group = TRUE, tolerance = 0)[2,2]\n  \n  surv &lt;- data.frame(surv_icc_id_site = as.numeric(icc_id_site),\n                    surv_icc_site = as.numeric(icc_site),\n                    surv_delta_meth_estimate = as.numeric(parameter_estimate),\n                    surv_delta_meth_se = as.numeric(parameter_se),\n                    surv_delta_meth_zval = as.numeric(parameter_zval),\n                    surv_delta_meth_pval = as.numeric(parameter_pval),\n                    surv_age_estimate = as.numeric(age_estimate),\n                    surv_age_se = as.numeric(age_se),\n                    surv_age_zval = as.numeric(age_zval),\n                    surv_age_pval = as.numeric(age_pval),\n                    surv_pre_estimate = as.numeric(pre_estimate),\n                    surv_pre_se = as.numeric(pre_se),\n                    surv_pre_zval = as.numeric(pre_zval),\n                    surv_pre_pval = as.numeric(pre_pval),\n                    surv_rsqc = as.numeric(rsqc),\n                    surv_rsqm = as.numeric(rsqm),\n                    surv_message = message              \n  ) \n  out &lt;- cbind(ams, surv)\n  return(out)\n  \n}, error = function(e){cat(\"ERROR :\", conditionMessage(e), \"\\n\");print(chr_pos)})\n}\n\n### run the model \n# run model\ndelta_out_fitness &lt;- parallel::mclapply(delta_meth_ls, function_model_fitness,mc.cores=12)\ndelta_out_fitness &lt;- do.call(rbind.data.frame, delta_out_fitness)\n\n# convert to numeric\ndelta_out_fitness$ams_delta_meth_estimate &lt;- as.numeric(delta_out_fitness$ams_delta_meth_estimate)\ndelta_out_fitness$surv_delta_meth_estimate &lt;- as.numeric(delta_out_fitness$surv_delta_meth_estimate)\n\n# exclude those with convergence errors\ndelta_out_ams &lt;- subset(delta_out_fitness, ams_message == \"relative convergence (4)\")\ndelta_out_surv &lt;- subset(delta_out_fitness, surv_message == \"relative convergence (4)\")\n\n# FDR correction\ndelta_out_ams$ams_delta_meth_qval &lt;- p.adjust(delta_out_ams$ams_delta_meth_pval, method = \"fdr\", n = nrow(delta_out_ams))\ndelta_out_surv$surv_delta_meth_qval &lt;- p.adjust(delta_out_surv$surv_delta_meth_pval, method = \"fdr\", n = nrow(delta_out_surv))\n\ndelta_out_ams$chr_pos &lt;- as.factor(delta_out_ams$chr_pos)\ndelta_out_surv$chr_pos &lt;- as.factor(delta_out_surv$chr_pos)\n\nsave(delta_out_ams, file=\"results/modeloutput/AMS_deltameth_modeloutput_filtered.RData\")\nsave(delta_out_surv, file=\"results/modeloutput/surv_deltameth_modeloutput_filtered.RData\")\n\nnrow(subset(delta_out_ams, ams_delta_meth_qval &lt; 0.05))\nnrow(subset(delta_out_surv, surv_delta_meth_qval &lt; 0.05))\n\n\nThere are 266 significant CpG sites for AMS but none for survival.\n    \nInterestingly, two of the significant CpG sites are the same CpG sites that are significantly associated with changes in Trypanosoma spp.. Below, I plot the relationship between delta Trypanosoma spp and delta methylation (left) and the relationship between delta methylation and AMS (right) for the first (top) and second (bottom) CpG site.\n\n\n\nRaw data overlapping CpG sites\n\n\nThe first CpG site is located in a gene body, intron and downstream region whereas the second CpG site was unannotated (located in an intergenic region) based on the black grouse genome annotation. Neither CpG was annotated based on the lifted over chicken genome annotation.\n\n7.0.1 Annotation\nI annotated all CpG sites from this analysis as well as the previous ones and have lists of genes (based on the chicken genome). Inputting the list of genes in GOrilla shows that cell fate determination is a significant GO term for AMS, but that is the only significant output."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Epigenetic changes associated with reproductive investment in a lekking bird",
    "section": "",
    "text": "This repository holds all scripts and output generated for the manuscript that investigates epigenetic chagnes associated with reproductive investment in black grouse (Lyrurus tetrix)\nBriefly, repeated samples were taken of yearling and adult black grouse males between 2002-2007. Blood samples were taken, which were used for epiGBS (RRBS), as well as measuring physiological traits and parasite abundance. We also have repeated samples of males that were caught pre- and post-lekking (defined as before mid April vs after mid April, ranging from approx. February until mid May in total).\n\n\n\nDNA methylation"
  },
  {
    "objectID": "qmd/1_filter.html#prepare-data",
    "href": "qmd/1_filter.html#prepare-data",
    "title": "2  Preparing and filtering the data",
    "section": "2.1 Prepare data",
    "text": "2.1 Prepare data\n\nltet_meth &lt;- methRead(files, pipeline = \"bismarkCytosineReport\",\n                      sample.id = ids, assembly = \"ltet\", \n                      treatment = c(rep(1, each =length(ids))), context = \"CpG\",\n                      sep = \" \")\n\nWhere files = the list of 116 file locations and ids = the list of the 116 ID’s of those files."
  },
  {
    "objectID": "qmd/1_filter.html#filter-data",
    "href": "qmd/1_filter.html#filter-data",
    "title": "2  Preparing and filtering the data",
    "section": "2.2 Filter data",
    "text": "2.2 Filter data\nNext, we perform a set of filtering steps. First, we filter by coverage, setting the minimum to 10X and a maximum of the 99.9 percentile\n\nltet_meth &lt;- filterByCoverage(ltet_meth,lo.count=10,lo.perc=NULL,\n                                    hi.count=NULL,hi.perc=99.9)   \n\nNext, we unite the strands while only keeping CpG sites that are covered in at least 75% of all individuals.\n\nltet_meth_unite_0.75 &lt;- methylKit::unite(ltet_meth, destrand = TRUE, \n                                    min.per.group = as.integer(0.75*length(ids)), mc.cores = 8)"
  },
  {
    "objectID": "qmd/1_filter.html#convert-data",
    "href": "qmd/1_filter.html#convert-data",
    "title": "2  Preparing and filtering the data",
    "section": "2.3 Convert data",
    "text": "2.3 Convert data\nThe next step is a custom R script that converts the output of the “unite” call to a long dataframe, where each line is a CpG site per individual and in the columns we have CpG site, nC, nT, cov, %meth. Moreover, in this script we remove CpG sites that are nonvariant, meaning that they are either 100% methylated in all samples or 0% methylated. This dataframe can be used for fitting models.\n\nsource(\"scripts/function_convert_methfile.R\")\n\nprepost_long &lt;- convert_meth(methfile = ltet_meth_unite_0.75, novar = \"remove\") \n\n#Out of 274,197 CpG sites, kept 274,188 which is 1% removed due to invariance"
  },
  {
    "objectID": "qmd/2_explore.html#summary-statistics",
    "href": "qmd/2_explore.html#summary-statistics",
    "title": "3  Data exploration",
    "section": "3.1 Summary statistics",
    "text": "3.1 Summary statistics\nWe start by collecting summary statistics per CpG site to check if methylation level is associated with coverage.\n\n\nCode\n#### Get summary statistics ####\n# select columns for specific data: number of sites that are methylated, coverage\n# number of columns in data\nncol &lt;- ncol(data) \n\n# first column with data respectively\nfirst_cov &lt;- 5\nfirst_meth_n &lt;- 6\n\n# select columns \ncols_cov &lt;- seq(first_cov, ncol-(2-(first_cov-5)), 3)\ncols_meth_n &lt;- seq(first_meth_n, ncol-(2-(first_meth_n-5)), 3)\n\n# make summary across all cpg sites\nsummary &lt;- data.frame(site = c(paste(data$chr, data$start, sep=\"_\")))\nsummary &lt;- summary %&gt;% mutate(mean_cov = rowMeans(data[cols_cov], na.rm=T),\n                              sd_cov = rowSds(as.matrix(data[cols_cov]), na.rm=T),\n                              mean_n_meth = rowMeans(data[cols_meth_n], na.rm=T),\n                              sd_n_meth = rowSds(as.matrix(data[cols_meth_n]), na.rm=T),\n                              na =  rowSums(is.na(data[cols_cov])),\n                              n =  rowSums(!is.na(data[cols_cov])))\n\n# calculate percentage methylation\nsum_meth_prop &lt;- data.frame(site = c(paste(data$chr, data$start, sep=\"_\")))\nfor (i in 1:length(cols_cov)){\n  sum_meth_prop &lt;- sum_meth_prop %&gt;% mutate(methProp = data[cols_meth_n[i]]/data[cols_cov[i]])\n  names(sum_meth_prop)[i+1] &lt;- ltet_meth_unite@sample.ids[i] \n}                              \n\n# add summary percentage methylation\nsummary &lt;- summary %&gt;% mutate(mean_perc_meth = rowMeans(sum_meth_prop[,-1], na.rm=T),\n                              sd_perc_meth = rowSds(as.matrix(sum_meth_prop[,-1]), na.rm=T), .before = mean_cov)\n\n\n# site to rownames\nsummary &lt;- summary %&gt;% remove_rownames %&gt;% column_to_rownames(var = \"site\")\n\n\nThe whole dataframe is very long, but we can check out the first 10 rows to see what the data look like:\n\n\n\n\n\nX\nmean_perc_meth\nsd_perc_meth\nmean_cov\nsd_cov\nmean_n_meth\nsd_n_meth\nna\nn\n\n\n\n\nScEsiA3_10002__HRSCAF_10935_92\n1.0000000\nNA\n11.00000\nNA\n11.0000000\nNA\n115\n1\n\n\nScEsiA3_10006__HRSCAF_10939_97\n0.8362985\n0.1392619\n17.14286\n9.3235493\n14.4761905\n8.9644802\n95\n21\n\n\nScEsiA3_1000__HRSCAF_1603_69\n1.0000000\n0.0000000\n10.33333\n0.5773503\n10.3333333\n0.5773503\n113\n3\n\n\nScEsiA3_1000__HRSCAF_1603_73\n0.0435897\n0.1383665\n12.76923\n2.1661735\n0.5384615\n1.6641006\n103\n13\n\n\nScEsiA3_1000__HRSCAF_1603_90\n0.0665976\n0.1105658\n15.76667\n4.6511647\n1.1000000\n2.0060254\n86\n30\n\n\nScEsiA3_1000__HRSCAF_1603_99\n0.9523810\n0.0824786\n11.33333\n2.3094011\n10.6666667\n1.1547005\n113\n3\n\n\nScEsiA3_1000__HRSCAF_1603_107\n0.0358021\n0.0438772\n43.53763\n31.4229766\n1.5806452\n1.9411033\n23\n93\n\n\nScEsiA3_1000__HRSCAF_1603_109\n0.0463004\n0.0457295\n43.51613\n31.4188440\n2.1075269\n2.3334168\n23\n93\n\n\nScEsiA3_1000__HRSCAF_1603_191\n0.0175915\n0.0336013\n43.52688\n31.4177987\n0.7096774\n1.1570262\n23\n93\n\n\nScEsiA3_1000__HRSCAF_1603_213\n0.0160323\n0.0356791\n43.50538\n31.4077752\n0.5698925\n1.0150803\n23\n93\n\n\n\n\n\n\n\nBelow you can find the histograms of the parameters calculated (mean methylation etc.)\n\n\nSummary statistics methylation"
  },
  {
    "objectID": "qmd/2_explore.html#pca",
    "href": "qmd/2_explore.html#pca",
    "title": "3  Data exploration",
    "section": "3.3 PCA",
    "text": "3.3 PCA\nNext, we can conduct a PCA to visualize potential methodological biases towards methylation. We only use complete data to conduct the PCA, meaning we only include CpG sites that are covered in each sample.\n\n\nCode\n#### PCA ####\n# create dataset for PCA with only complete data\ndata_pca &lt;- data.frame(matrix(unlist(sum_meth_prop), nrow=nrow(sum_meth_prop)),stringsAsFactors=FALSE)\ndata_pca &lt;- data_pca[complete.cases(data_pca),] \nnrow(data_pca) \ndata_pca &lt;- data_pca[,-1]\ndata_pca &lt;- lapply(data_pca, as.numeric)\n\n# conduct pca and save plots\nPCA &lt;- prcomp(t(as.data.frame(data_pca)), center=F, scale=F) # t() transposes the matrix meth_PCA to get one coordinate for each id\n\n# get eigenvalues and percentage explained\neigs &lt;- PCA$sdev^2\nvar &lt;- eigs/sum(eigs)\nexplained&lt;-100*eigs/sum(eigs) #PC1 explains 97% of data\n\n# PCA coloured by library, site\n\n# first collect data required to plot the PCs\n\n# data on lek site, sampling \nload(\"data/phenotypes/fulldata_complete_epi_withdates.RData\")\nmeta_ltet &lt;- all_pheno_epi %&gt;% dplyr::select(c(epi_nr, id, site, prepost, year)) %&gt;% filter(!is.na(prepost))\n\n# data on QC\nload(file=\"/home/nioo/rebeccash/PhD_grouse/methylation_grouse/data/genomics/qc_epi.RData\")\n\nqc_ltet &lt;- qc %&gt;% dplyr::select(c(sample_id, Sample, lib, n_in_lib, conc_std, batch, extraction_batch))\nqc_ltet &lt;- subset(qc_ltet, Sample %in% meta_ltet$epi_nr)\n\n# exclude repeats\nqc_ltet &lt;- subset(qc_ltet, sample_id != \"lib99_1\")\nqc_ltet &lt;- subset(qc_ltet, sample_id != \"lib20_119\")\nqc_ltet &lt;- subset(qc_ltet, sample_id != \"lib20_191\")\nqc_ltet &lt;- subset(qc_ltet, sample_id != \"lib7_250\")\n\n# combine data with PC loadings\nmerge_pca &lt;- data.frame(sample_id = ltet_meth_unite@sample.ids)\nmerge_pca &lt;- left_join(merge_pca, qc_ltet, by = \"sample_id\")\nmerge_pca &lt;- left_join(merge_pca, meta_ltet, by = c(\"Sample\" = \"epi_nr\"))\nmerge_pca$pc1 &lt;- PCA$x[,1]\nmerge_pca$pc2 &lt;- PCA$x[,2]\n\n# and with mean methylation level\nsummary_per_sample &lt;- data.frame(sample_id = ltet_meth_unite@sample.ids)\nsummary_per_sample &lt;- summary_per_sample %&gt;% mutate(mean_perc_meth = colMeans(sum_meth_prop[,-1], na.rm=T))\n\nmerge_pca &lt;- left_join(merge_pca, summary_per_sample, by = \"sample_id\")\n\n# plot PCs\nggplot(merge_pca, aes(x = pc1, y = pc2)) + geom_point(size=3, aes(col = site)) + \n    labs(x = \"PC 1\", y = \"PC 2\", col = \"Lek site\") +\n    scale_color_viridis_d() -&gt; pca_site\n\nggplot(merge_pca, aes(x = pc1, y = pc2)) + geom_point(size=3, aes(col = prepost)) + \n    labs(x = \"PC 1\", y = \"PC 2\", col = \"Time period\") +\n    scale_color_viridis_d() -&gt; pca_prepost\n\nggplot(merge_pca, aes(x = pc1, y = pc2)) + geom_point(size=3, aes(col = as.factor(year))) + \n    labs(x = \"PC 1\", y = \"PC 2\", col = \"Year\") +\n    scale_color_viridis_d() -&gt; pca_year\n    \nggplot(merge_pca, aes(x = pc1, y = pc2)) + geom_point(size=3, aes(col = lib)) + \n    labs(x = \"PC 1\", y = \"PC 2\", col = \"Library\") +\n    scale_color_viridis_d() -&gt; pca_lib\n\nggplot(merge_pca, aes(x = pc1, y = pc2)) + geom_point(size=3, aes(col = as.factor(n_in_lib))) + \n    labs(x = \"PC 1\", y = \"PC 2\", subtitle = \"Sample within library\") +\n    theme(legend.position=\"none\")+\n    scale_color_viridis_d() -&gt; pca_lib_n\n\nmerge_pca$conc_std[which(merge_pca$conc_std &gt; 400)] &lt;- NA #outlier and must be wrong\n\nggplot(merge_pca, aes(x = pc1, y = pc2)) + geom_point(size=3, aes(col = conc_std)) + \n    labs(x = \"PC 1\", y = \"PC 2\", col = \"Concentration\") +\n    scale_color_viridis_c() -&gt; pca_conc\n\nggplot(merge_pca, aes(x = pc1, y = pc2)) + geom_point(size=3, aes(col = as.factor(batch))) + \n    labs(x = \"PC 1\", y = \"PC 2\", col = \"Batch\") +\n    scale_color_viridis_d() -&gt; pca_batch\n\nggplot(merge_pca, aes(x = pc1, y = pc2)) + geom_point(size=3, aes(col = as.factor(extraction_batch))) + \n    labs(x = \"PC 1\", y = \"PC 2\", col = \"Batch\") +\n    scale_color_viridis_d() -&gt; pca_batch_ext    \n\ncowplot::plot_grid(pca_site, pca_prepost, pca_year, pca_lib, pca_lib_n, pca_conc, pca_batch, pca_batch_ext,\n                  labs=\"auto\", align=\"hv\", axis=\"lb\", ncol=2, label_fontface = \"plain\", label_size = 22) -&gt; pca_plots\n\n\n\n\nPCA plots"
  },
  {
    "objectID": "qmd/2_explore.html#linear-mixed-effect-model",
    "href": "qmd/2_explore.html#linear-mixed-effect-model",
    "title": "3  Data exploration",
    "section": "3.4 Linear mixed effect model",
    "text": "3.4 Linear mixed effect model\nLastly, we want to make sure that average methylation percentage is not affected by library by conducting a LMM\n\n#### LM ####\nlmer_lib &lt;- lmerTest::lmer(mean_perc_meth ~ lib + (1|id), data = merge_pca)\nlmer_null  &lt;- lmerTest::lmer(mean_perc_meth ~ 1 + (1|id), data = merge_pca)\nanova(lmer_lib, lmer_null)\n\nrefitting model(s) with ML (instead of REML)\n\n\nData: merge_pca\nModels:\nlmer_null: mean_perc_meth ~ 1 + (1 | id)\nlmer_lib: mean_perc_meth ~ lib + (1 | id)\n          npar     AIC     BIC logLik deviance  Chisq Df Pr(&gt;Chisq)\nlmer_null    3 -399.71 -391.45 202.85  -405.71                     \nlmer_lib    12 -392.84 -359.80 208.42  -416.84 11.133  9     0.2667\n\n\nIt seems there are no library effects on average CpG methylation."
  },
  {
    "objectID": "qmd/3_changing_meth.html",
    "href": "qmd/3_changing_meth.html",
    "title": "4  Identifying CpG sites that change over the lekking season",
    "section": "",
    "text": "Next, we want to identify CpG sites that significantly change in methylation level over the lekking season. To do so, we build a generalized linear mixed effect model per CpG site, using the time period (pre- or post-lekking) as a fixed effect. Moreover, as there are multiple samples for each individual, we correct for the non-independence of samples by including ID as a random effect. The response variables in these models are both the number of methylated and number of unmethylated C’s, using the cbind function.\n\n### load packages \npacman::p_load(tidyverse, data.table, tibble, performance, matrixStats, \n               parallel, performance, lmerTest, tidystats, insight, rptR)\n\n### load epi data\nload(file = \"data/processed/methylkit_prepost_long_onlyvar_min0.75.RData\") \n\n### load phenotype data \nload(\"data/phenotypes/fulldata_complete_epi_withdates.RData\")\nprepost &lt;- subset(all_pheno_epi, !is.na(prepost)) #phenotype dataset also consists of other individuals not part of this study\nrm(all_pheno_epi)\n\n### merge with metadata\n\nprepost_long &lt;- left_join(prepost_long, prepost[,c(\"id\", \"prepost\", \"year\", \"born\",\"site\", \"fulldate\")], \n                          by = c(\"id\", \"year\", \"fulldate\"))\n\nprepost_long$age &lt;- prepost_long$year - prepost_long$born\n\n### convert data to a list, one per CpG site\ndata &lt;- prepost_long %&gt;% group_split(chr_pos)\n\n### define function to collect overdispersion statistics\noverdisp.lmer_fun &lt;- function(model) {\n  vpars &lt;- function(m) {\n    nrow(m)*(nrow(m)+1)/2\n  }\n  model.df &lt;- sum(sapply(VarCorr(model),vpars))+length(fixef(model))\n  rdf &lt;- nrow(model.frame(model))-model.df\n  rp &lt;- residuals(model,type=\"pearson\")\n  Pearson.chisq &lt;- sum(rp^2)\n  prat &lt;- Pearson.chisq/rdf\n  pval &lt;- pchisq(Pearson.chisq, df=rdf, lower.tail=FALSE)\n  data.frame(chisq=Pearson.chisq,ratio=prat,rdf=rdf,p=pval)\n}\n\n### build function to run the model\nfunction_model_glmer &lt;- function(df){tryCatch({\n  chr_pos &lt;- as.character(df[1,1])\n  df &lt;- as.data.frame(df)\n  df$prepost &lt;- as.factor(df$prepost)\n  df$id &lt;- as.factor(df$id)\n  \n  # model\n  model &lt;- lme4::glmer(cbind(numC, numT) ~ prepost + (1|site/id), family = \"binomial\", df)\n  \n  #fixed effects\n  prepost_estimate &lt;- summary(model)$coefficients[2,1]\n  prepost_se &lt;- summary(model)$coefficients[2,2]\n  prepost_zval &lt;- summary(model)$coefficients[2,3]\n  prepost_pval &lt;-  summary(model)$coefficients[2,4]\n  \n  #random effects \n  id_sd &lt;- attributes(VarCorr(model)$id)$stddev\n  id_variance &lt;- data.frame(VarCorr(model), comp=\"Variance\")[1,4]\n  \n  rsqc &lt;- performance::r2(model)$R2_conditional #fixed plus random effects relative to overall variance\n  rsqm &lt;- performance::r2(model)$R2_marginal #fixed effects relative to overall variance\n  \n  dispersion.chisq &lt;- overdisp.lmer_fun(model)[1,1]\n  dispersion.ratio &lt;- overdisp.lmer_fun(model)[1,2]\n  dispersion.rdf &lt;- overdisp.lmer_fun(model)[1,3]\n  dispersion.pval &lt;- overdisp.lmer_fun(model)[1,4]\n  \n  isSingular &lt;- isSingular(model)\n  \n  icc_id_site &lt;- icc(model, by_group = TRUE, tolerance = 0)[1,2]\n  \n  return(data.frame(chr_pos=chr_pos, \n                    prepost_estimate = prepost_estimate,\n                    prepost_se = prepost_se,\n                    prepost_zval = prepost_zval,\n                    prepost_pval = prepost_pval,\n                    id_sd = id_sd,\n                    id_variance = id_variance,\n                    rsqc = rsqc,\n                    rsqm = rsqm,\n                    dispersion.chisq = dispersion.chisq,\n                    dispersion.ratio = dispersion.ratio,\n                    dispersion.rdf = dispersion.rdf,\n                    dispersion.pval = dispersion.pval,\n                    isSingular = isSingular,\n                    icc_id_site = icc_id_site\n                    ))\n}, error = function(e){cat(\"ERROR :\", conditionMessage(e), \"\\n\");print(chr_pos)})\n}\n\n### run the model in parallel per CpG site (list item)\nout_glmer &lt;- parallel::mclapply(data, function_model_glmer, mc.cores=4)\nout_glmer &lt;- do.call(rbind.data.frame, out_glmer)\n\n### apply a FDR multiple-testing correction\nout_glmer$prepost_qval &lt;- p.adjust(out_glmer$prepost_pval, method = \"fdr\", n = nrow(out_glmer))\n\nsave(out_glmer, file=\"results/modeloutput/prepost_modeloutput_glmer_min0.75.RData\")\n\n### only select CpG sites with significant effects of pre/post\n\nsub_glmer_prepost &lt;- subset(out_glmer, prepost_qval &lt; 0.05 & dispersion.ratio &lt; 1.1 & dispersion.pval &gt; 0.05 & abs(prepost_estimate &gt;= 0.1))\n#N = 3,418\n\n### collect the actual data from those significant CpG sites\n\nchanging_cpg &lt;- prepost_long %&gt;% filter(chr_pos %in% sub_glmer_prepost$chr_pos)\nsave(changing_cpg, file=\"results/modeloutput/subset_sites_sig_prepost.RData\")"
  },
  {
    "objectID": "qmd/4_effort_meth.html#prepare-the-data",
    "href": "qmd/4_effort_meth.html#prepare-the-data",
    "title": "5  Which changes in CpG site methylation are associated with reproductive effort?",
    "section": "5.1 Prepare the data",
    "text": "5.1 Prepare the data\n\n#combine with site and behaviour info\n\ndelta_meth &lt;- left_join(delta_meth, unique(all_pheno_epi[,c(\"id\", \"year\", \"site\", \"Core\")], by = c(\"id\", \"year\")))\n\n#z-transform the traits before the model that subsets IDs and years where there is\n#data for that CpG site\n\neffort &lt;- all_pheno_epi %&gt;% dplyr::select(c(\"id\", \"year\", \"attend\", \"fight\", \"dist\", \"MS\")) %&gt;% filter(!is.na(attend)) %&gt;% unique()\n\neffort &lt;- subset(effort, id %in% delta_meth$id)\n\neffort$attend_scl &lt;- scale(effort$attend)\neffort$fight_scl &lt;- scale(effort$fight)\neffort$dist_scl &lt;- scale(effort$dist)\n\n#combine effort data with methylation data\n\ndelta_meth &lt;- left_join(delta_meth, effort[,c(\"id\", \"year\", \"attend\", \"fight\", \"dist\", \"attend_scl\", \"fight_scl\", \"dist_scl\")], by = c(\"id\", \"year\"))\n                                           \ndelta_meth_ls &lt;- delta_meth %&gt;% group_split(chr_pos)"
  },
  {
    "objectID": "qmd/4_effort_meth.html#functon-to-run-the-model",
    "href": "qmd/4_effort_meth.html#functon-to-run-the-model",
    "title": "5  Which changes in CpG site methylation are associated with reproductive effort?",
    "section": "5.2 Functon to run the model",
    "text": "5.2 Functon to run the model\n\n\nCode\n# function to run the model\nfunction_model_delta &lt;- function(df, parameter){tryCatch({\n  chr_pos &lt;- as.character(df[1,1])\n  df &lt;- as.data.frame(df)\n  df$methperc_pre_scl &lt;- scale(df$methperc_pre)\n\n  formula &lt;- formula(paste0(\"scale(delta_meth) ~ \", parameter, \"_scl + age + scale(methperc_pre) + (1|site/id) \"))\n  \n  model &lt;- lmerTest::lmer(formula, data=df)\n  summary &lt;- summary(model)\n  \n  overdisp.lmer_fun &lt;- function(model) {\n    vpars &lt;- function(m) {\n      nrow(m)*(nrow(m)+1)/2\n    }\n    model.df &lt;- sum(sapply(VarCorr(model),vpars))+length(fixef(model))\n    rdf &lt;- nrow(model.frame(model))-model.df\n    rp &lt;- residuals(model,type=\"pearson\")\n    Pearson.chisq &lt;- sum(rp^2)\n    prat &lt;- Pearson.chisq/rdf\n    pval &lt;- pchisq(Pearson.chisq, df=rdf, lower.tail=FALSE)\n    data.frame(chisq=Pearson.chisq,ratio=prat,rdf=rdf,p=pval)\n  }\n  \n  #fixed effect\n  parameter_estimate &lt;- summary$coefficients[2,1]\n  parameter_se &lt;- summary$coefficients[2,2]\n  parameter_df &lt;- summary$coefficients[2,3]\n  parameter_tval &lt;- summary$coefficients[2,4]\n  parameter_pval &lt;- summary$coefficients[2,5]\n  \n  #age effect\n  age_estimate &lt;- summary$coefficients[\"age\", \"Estimate\"]\n  age_se &lt;- summary$coefficients[\"age\", \"Std. Error\"]\n  age_df &lt;- summary$coefficients[\"age\", \"df\"]\n  age_tval &lt;- summary$coefficients[\"age\", \"t value\"]\n  age_pval &lt;- summary$coefficients[\"age\", \"Pr(&gt;|t|)\"]\n  \n  #premeth effect\n  pre_estimate &lt;- summary$coefficients[\"scale(methperc_pre)\", \"Estimate\"]\n  pre_se &lt;- summary$coefficients[\"scale(methperc_pre)\", \"Std. Error\"]\n  pre_df &lt;- summary$coefficients[\"scale(methperc_pre)\", \"df\"]\n  pre_tval &lt;- summary$coefficients[\"scale(methperc_pre)\", \"t value\"]\n  pre_pval &lt;- summary$coefficients[\"scale(methperc_pre)\", \"Pr(&gt;|t|)\"]\n  \n  rsqc &lt;- performance::r2(model)$R2_conditional #fixed plus random parameterects relative to overall variance\n  rsqm &lt;- performance::r2(model)$R2_marginal #fixed parameterects relative to overall variance\n  \n  dispersion.chisq &lt;- overdisp.lmer_fun(model)[1,1]\n  dispersion.ratio &lt;- overdisp.lmer_fun(model)[1,2]\n  dispersion.rdf &lt;- overdisp.lmer_fun(model)[1,3]\n  dispersion.pval &lt;- overdisp.lmer_fun(model)[1,4]\n  \n  isSingular &lt;- isSingular(model)\n  \n  icc_id_site &lt;-icc(model, by_group = TRUE, tolerance = 0)[1,2]\n  icc_site &lt;-icc(model, by_group = TRUE, tolerance = 0)[2,2]\n  \n  return(data.frame(chr_pos=as.factor(chr_pos),\n                    parameter = as.factor(parameter),\n                    icc_id_site = as.numeric(icc_id_site),\n                    icc_site = as.numeric(icc_site),\n                    parameter_estimate = as.numeric(parameter_estimate),\n                    parameter_se = as.numeric(parameter_se),\n                    parameter_df = as.numeric(parameter_df),\n                    parameter_tval = as.numeric(parameter_tval),\n                    parameter_pval = as.numeric(parameter_pval),\n                    age_estimate = as.numeric(age_estimate),\n                    age_se = as.numeric(age_se),\n                    age_df = as.numeric(age_df),\n                    age_tval = as.numeric(age_tval),\n                    age_pval = as.numeric(age_pval),\n                    pre_estimate = as.numeric(pre_estimate),\n                    pre_se = as.numeric(pre_se),\n                    pre_df = as.numeric(pre_df),\n                    pre_tval = as.numeric(pre_tval),\n                    pre_pval = as.numeric(pre_pval),\n                    rsqc = as.numeric(rsqc),\n                    rsqm = as.numeric(rsqm),\n                    dispersion.chisq = as.numeric(dispersion.chisq),\n                    dispersion.ratio = as.numeric(dispersion.ratio),\n                    dispersion.rdf = as.numeric(dispersion.rdf),\n                    dispersion.pval = as.numeric(dispersion.pval),\n                    isSingular = as.logical(isSingular)\n                    \n  ))\n}, error = function(e){cat(\"ERROR :\", conditionMessage(e), \"\\n\");print(chr_pos)})\n}"
  },
  {
    "objectID": "qmd/4_effort_meth.html#run-the-model-per-trait",
    "href": "qmd/4_effort_meth.html#run-the-model-per-trait",
    "title": "5  Which changes in CpG site methylation are associated with reproductive effort?",
    "section": "5.3 Run the model per trait",
    "text": "5.3 Run the model per trait\n\n### run the model per trait\n\n### centrality\n# run model\ndelta_out_dist &lt;- parallel::mclapply(delta_meth_ls, function_model_delta, parameter=\"dist\",mc.cores=12)\ndelta_out_dist &lt;- do.call(rbind.data.frame, delta_out_dist)\n\n# convert to numeric\ndelta_out_dist$parameter_pval &lt;- as.numeric(delta_out_dist$parameter_pval)\ndelta_out_dist$age_pval &lt;- as.numeric(delta_out_dist$age_pval)\n\n# exclude those with overdispersion\ndelta_out_dist &lt;- subset(delta_out_dist, dispersion.ratio &lt; 1.1 & dispersion.pval &gt; 0.05)\n\n# FDR correction\ndelta_out_dist$parameter_qval &lt;- p.adjust(delta_out_dist$parameter_pval, method = \"fdr\", n = nrow(delta_out_dist))\n\ndelta_out_dist$age_qval &lt;- p.adjust(delta_out_dist$age_pval, method = \"fdr\", n = nrow(delta_out_dist))\n\nRepeat this for all traits:\n\n\nCode\n### attendance\n# run model\ndelta_out_attend &lt;- parallel::mclapply(delta_meth_ls, function_model_delta, parameter=\"attend\",mc.cores=12)\ndelta_out_attend &lt;- do.call(rbind.data.frame, delta_out_attend)\n\n# to numeric\ndelta_out_attend$parameter_pval &lt;- as.numeric(delta_out_attend$parameter_pval)\ndelta_out_attend$age_pval &lt;- as.numeric(delta_out_attend$age_pval)\n\n# exclude overdispersion\ndelta_out_attend &lt;- subset(delta_out_attend, isSingular == FALSE & dispersion.ratio &lt; 1.1 & dispersion.pval &gt; 0.05)\n\n# FDR correction\ndelta_out_attend$parameter_qval &lt;- p.adjust(delta_out_attend$parameter_pval, method = \"fdr\", n = nrow(delta_out_attend))\ndelta_out_attend$age_qval &lt;- p.adjust(delta_out_attend$age_pval, method = \"fdr\", n = nrow(delta_out_attend))\n\n### fighting\n# run model\ndelta_out_fight &lt;- parallel::mclapply(delta_meth_ls, function_model_delta, parameter=\"fight\",mc.cores=12)\ndelta_out_fight &lt;- do.call(rbind.data.frame, delta_out_fight)\n\n# as numeric\ndelta_out_fight$parameter_pval &lt;- as.numeric(delta_out_fight$parameter_pval)\ndelta_out_fight$age_pval &lt;- as.numeric(delta_out_fight$age_pval)\n\n# exclude overdispersion\ndelta_out_fight &lt;- subset(delta_out_fight, dispersion.ratio &lt; 1.1 & dispersion.pval &gt; 0.05)\n\n# FDR correction\ndelta_out_fight$parameter_qval &lt;- p.adjust(delta_out_fight$parameter_pval, method = \"fdr\", n = nrow(delta_out_fight))\ndelta_out_fight$age_qval &lt;- p.adjust(delta_out_fight$age_pval, method = \"fdr\", n = nrow(delta_out_fight))\n\ndelta_out_all &lt;- rbind(delta_out_dist, delta_out_attend, delta_out_fight)\ndelta_out_all$chr_pos &lt;- as.factor(delta_out_all$chr_pos)\ndelta_out_all$parameter &lt;- as.factor(delta_out_all$parameter)\ndelta_out_all$isSingular &lt;- as.logical(delta_out_all$isSingular)\ndelta_out_all[c(3:25, 27,28)] &lt;- lapply(delta_out_all[c(3:25, 27:28)], as.numeric)"
  },
  {
    "objectID": "qmd/4_effort_meth.html#results",
    "href": "qmd/4_effort_meth.html#results",
    "title": "5  Which changes in CpG site methylation are associated with reproductive effort?",
    "section": "5.4 Results",
    "text": "5.4 Results\nThere are 2 significant CpG sites for centrality and 6 for attendance, but none for fighting. We can plot the raw data here:\n\n\nRaw data attendance\n\n\n\n\n\nRaw data centrality"
  },
  {
    "objectID": "qmd/5_physio_meth.html#prepare-the-data",
    "href": "qmd/5_physio_meth.html#prepare-the-data",
    "title": "6  Which changes in CpG site methylation are associated with changes in physiology?",
    "section": "6.1 Prepare the data",
    "text": "6.1 Prepare the data\n\n### load packages\npacman::p_load(tidyverse, data.table, tibble, performance, matrixStats, \n               parallel, performance, lmerTest, tidystats, insight)\n\n### load data\n\nload(file = \"results/modeloutput/subset_sites_sig_deltameth.RData\")\n\n### load phenotypic data\n\nload(\"data/phenotypes/fulldata_complete_epi_withdates.RData\")\nload(\"data/phenotypes/pheno_dif_prepost.RData\")\n\n#combine with site info\n\ndelta_meth &lt;- left_join(delta_meth, unique(all_pheno_epi[,c(\"id\", \"year\", \"site\", \"Core\")], by = c(\"id\", \"year\")))\n\n#combine with delta physiology\nprepost_dif$mass_dif_scl &lt;- scale(prepost_dif$mass_dif)\nprepost_dif$microf_dif_scl &lt;- scale(prepost_dif$microf_dif)\nprepost_dif$trypa_dif_scl &lt;- scale(prepost_dif$trypa_dif)\nprepost_dif$ig_dif_scl &lt;- scale(prepost_dif$ig_dif)\nprepost_dif$hct_dif_scl &lt;- scale(prepost_dif$hct_dif)\n\ndelta_meth &lt;- left_join(delta_meth, unique(prepost_dif[,c(\"id\", \"year\", \"mass_dif_scl\", \"microf_dif_scl\", \"trypa_dif_scl\", \"ig_dif_scl\", \"hct_dif_scl\")], by = c(\"id\", \"year\")))\n\ndelta_meth_ls &lt;- delta_meth %&gt;% group_split(chr_pos)"
  },
  {
    "objectID": "qmd/5_physio_meth.html#functon-to-run-the-model",
    "href": "qmd/5_physio_meth.html#functon-to-run-the-model",
    "title": "6  Which changes in CpG site methylation are associated with changes in physiology?",
    "section": "6.2 Functon to run the model",
    "text": "6.2 Functon to run the model\n\n\nCode\n# function to run the model\nfunction_model_delta &lt;- function(df, parameter){tryCatch({\n  chr_pos &lt;- as.character(df[1,1])\n  df &lt;- as.data.frame(df)\n  df$methperc_pre_scl &lt;- scale(df$methperc_pre)\n\n  formula &lt;- formula(paste0(\"scale(delta_meth) ~ \", parameter, \"_dif_scl + age + scale(methperc_pre) + (1|site/id) \"))\n  \n  model &lt;- lmerTest::lmer(formula, data=df)\n  summary &lt;- summary(model)\n  \n  overdisp.lmer_fun &lt;- function(model) {\n    vpars &lt;- function(m) {\n      nrow(m)*(nrow(m)+1)/2\n    }\n    model.df &lt;- sum(sapply(VarCorr(model),vpars))+length(fixef(model))\n    rdf &lt;- nrow(model.frame(model))-model.df\n    rp &lt;- residuals(model,type=\"pearson\")\n    Pearson.chisq &lt;- sum(rp^2)\n    prat &lt;- Pearson.chisq/rdf\n    pval &lt;- pchisq(Pearson.chisq, df=rdf, lower.tail=FALSE)\n    data.frame(chisq=Pearson.chisq,ratio=prat,rdf=rdf,p=pval)\n  }\n  \n  #fixed effect\n  parameter_estimate &lt;- summary$coefficients[2,1]\n  parameter_se &lt;- summary$coefficients[2,2]\n  parameter_df &lt;- summary$coefficients[2,3]\n  parameter_tval &lt;- summary$coefficients[2,4]\n  parameter_pval &lt;- summary$coefficients[2,5]\n  \n  #age effect\n  age_estimate &lt;- summary$coefficients[\"age\", \"Estimate\"]\n  age_se &lt;- summary$coefficients[\"age\", \"Std. Error\"]\n  age_df &lt;- summary$coefficients[\"age\", \"df\"]\n  age_tval &lt;- summary$coefficients[\"age\", \"t value\"]\n  age_pval &lt;- summary$coefficients[\"age\", \"Pr(&gt;|t|)\"]\n  \n  #premeth effect\n  pre_estimate &lt;- summary$coefficients[\"scale(methperc_pre)\", \"Estimate\"]\n  pre_se &lt;- summary$coefficients[\"scale(methperc_pre)\", \"Std. Error\"]\n  pre_df &lt;- summary$coefficients[\"scale(methperc_pre)\", \"df\"]\n  pre_tval &lt;- summary$coefficients[\"scale(methperc_pre)\", \"t value\"]\n  pre_pval &lt;- summary$coefficients[\"scale(methperc_pre)\", \"Pr(&gt;|t|)\"]\n  \n  rsqc &lt;- performance::r2(model)$R2_conditional #fixed plus random parameterects relative to overall variance\n  rsqm &lt;- performance::r2(model)$R2_marginal #fixed parameterects relative to overall variance\n  \n  dispersion.chisq &lt;- overdisp.lmer_fun(model)[1,1]\n  dispersion.ratio &lt;- overdisp.lmer_fun(model)[1,2]\n  dispersion.rdf &lt;- overdisp.lmer_fun(model)[1,3]\n  dispersion.pval &lt;- overdisp.lmer_fun(model)[1,4]\n  \n  isSingular &lt;- isSingular(model)\n  \n  icc_id_site &lt;-icc(model, by_group = TRUE, tolerance = 0)[1,2]\n  icc_site &lt;-icc(model, by_group = TRUE, tolerance = 0)[2,2]\n  \n  return(data.frame(chr_pos=as.factor(chr_pos),\n                    parameter = as.factor(parameter),\n                    icc_id_site = as.numeric(icc_id_site),\n                    icc_site = as.numeric(icc_site),\n                    parameter_estimate = as.numeric(parameter_estimate),\n                    parameter_se = as.numeric(parameter_se),\n                    parameter_df = as.numeric(parameter_df),\n                    parameter_tval = as.numeric(parameter_tval),\n                    parameter_pval = as.numeric(parameter_pval),\n                    age_estimate = as.numeric(age_estimate),\n                    age_se = as.numeric(age_se),\n                    age_df = as.numeric(age_df),\n                    age_tval = as.numeric(age_tval),\n                    age_pval = as.numeric(age_pval),\n                    pre_estimate = as.numeric(pre_estimate),\n                    pre_se = as.numeric(pre_se),\n                    pre_df = as.numeric(pre_df),\n                    pre_tval = as.numeric(pre_tval),\n                    pre_pval = as.numeric(pre_pval),\n                    rsqc = as.numeric(rsqc),\n                    rsqm = as.numeric(rsqm),\n                    dispersion.chisq = as.numeric(dispersion.chisq),\n                    dispersion.ratio = as.numeric(dispersion.ratio),\n                    dispersion.rdf = as.numeric(dispersion.rdf),\n                    dispersion.pval = as.numeric(dispersion.pval),\n                    isSingular = as.logical(isSingular)\n                    \n  ))\n}, error = function(e){cat(\"ERROR :\", conditionMessage(e), \"\\n\");print(chr_pos)})\n}"
  },
  {
    "objectID": "qmd/5_physio_meth.html#run-the-model-per-trait",
    "href": "qmd/5_physio_meth.html#run-the-model-per-trait",
    "title": "6  Which changes in CpG site methylation are associated with changes in physiology?",
    "section": "6.3 Run the model per trait",
    "text": "6.3 Run the model per trait\n\n### run the model per trait\n\n### mass\n# run model\ndelta_out_mass &lt;- parallel::mclapply(delta_meth_ls, function_model_delta, parameter=\"mass\",mc.cores=12)\ndelta_out_mass &lt;- do.call(rbind.data.frame, delta_out_mass)\n\n# convert to numeric\ndelta_out_mass$parameter_pval &lt;- as.numeric(delta_out_mass$parameter_pval)\ndelta_out_mass$age_pval &lt;- as.numeric(delta_out_mass$age_pval)\n\n# exclude those with overdispersion\ndelta_out_mass &lt;- subset(delta_out_mass, dispersion.ratio &lt; 1.1 & dispersion.pval &gt; 0.05)\n\n# FDR correction\ndelta_out_mass$parameter_qval &lt;- p.adjust(delta_out_mass$parameter_pval, method = \"fdr\", n = nrow(delta_out_mass))\n\ndelta_out_mass$age_qval &lt;- p.adjust(delta_out_mass$age_pval, method = \"fdr\", n = nrow(delta_out_mass))\n\nRepeat this for all traits:\n\n\nCode\n### microf\n# run model\ndelta_out_microf &lt;- parallel::mclapply(delta_meth_ls, function_model_delta, parameter=\"microf\",mc.cores=12)\ndelta_out_microf &lt;- do.call(rbind.data.frame, delta_out_microf)\n\n# to numeric\ndelta_out_microf$parameter_pval &lt;- as.numeric(delta_out_microf$parameter_pval)\ndelta_out_microf$age_pval &lt;- as.numeric(delta_out_microf$age_pval)\n\n# exclude overdispersion\ndelta_out_microf &lt;- subset(delta_out_microf, isSingular == FALSE & dispersion.ratio &lt; 1.1 & dispersion.pval &gt; 0.05)\n\n# FDR correction\ndelta_out_microf$parameter_qval &lt;- p.adjust(delta_out_microf$parameter_pval, method = \"fdr\", n = nrow(delta_out_microf))\ndelta_out_microf$age_qval &lt;- p.adjust(delta_out_microf$age_pval, method = \"fdr\", n = nrow(delta_out_microf))\n\n### trypa\n# run model\ndelta_out_trypa &lt;- parallel::mclapply(delta_meth_ls, function_model_delta, parameter=\"trypa\",mc.cores=12)\ndelta_out_trypa &lt;- do.call(rbind.data.frame, delta_out_trypa)\n\n# as numeric\ndelta_out_trypa$parameter_pval &lt;- as.numeric(delta_out_trypa$parameter_pval)\ndelta_out_trypa$age_pval &lt;- as.numeric(delta_out_trypa$age_pval)\n\n# exclude overdispersion\ndelta_out_trypa &lt;- subset(delta_out_trypa, dispersion.ratio &lt; 1.1 & dispersion.pval &gt; 0.05)\n\n# FDR correction\ndelta_out_trypa$parameter_qval &lt;- p.adjust(delta_out_trypa$parameter_pval, method = \"fdr\", n = nrow(delta_out_trypa))\ndelta_out_trypa$age_qval &lt;- p.adjust(delta_out_trypa$age_pval, method = \"fdr\", n = nrow(delta_out_trypa))\n\n### ig\n# run model\ndelta_out_ig &lt;- parallel::mclapply(delta_meth_ls, function_model_delta, parameter=\"ig\",mc.cores=12)\ndelta_out_ig &lt;- do.call(rbind.data.frame, delta_out_ig)\n\n# as numeric\ndelta_out_ig$parameter_pval &lt;- as.numeric(delta_out_ig$parameter_pval)\ndelta_out_ig$age_pval &lt;- as.numeric(delta_out_ig$age_pval)\n\n# exclude overdispersion\ndelta_out_ig &lt;- subset(delta_out_ig, dispersion.ratio &lt; 1.1 & dispersion.pval &gt; 0.05)\n\n# FDR correction\ndelta_out_ig$parameter_qval &lt;- p.adjust(delta_out_ig$parameter_pval, method = \"fdr\", n = nrow(delta_out_ig))\ndelta_out_ig$age_qval &lt;- p.adjust(delta_out_ig$age_pval, method = \"fdr\", n = nrow(delta_out_ig))\n\n### hct\n# run model\ndelta_out_hct &lt;- parallel::mclapply(delta_meth_ls, function_model_delta, parameter=\"hct\",mc.cores=12)\ndelta_out_hct &lt;- do.call(rbind.data.frame, delta_out_hct)\n\n# as numeric\ndelta_out_hct$parameter_pval &lt;- as.numeric(delta_out_hct$parameter_pval)\ndelta_out_hct$age_pval &lt;- as.numeric(delta_out_hct$age_pval)\n\n# exclude overdispersion\ndelta_out_hct &lt;- subset(delta_out_hct, dispersion.ratio &lt; 1.1 & dispersion.pval &gt; 0.05)\n\n# FDR correction\ndelta_out_hct$parameter_qval &lt;- p.adjust(delta_out_hct$parameter_pval, method = \"fdr\", n = nrow(delta_out_hct))\ndelta_out_hct$age_qval &lt;- p.adjust(delta_out_hct$age_pval, method = \"fdr\", n = nrow(delta_out_hct))\n\n### combine\ndelta_out_all &lt;- rbind(delta_out_mass, delta_out_microf, delta_out_trypa, delta_out_ig, delta_out_hct)\ndelta_out_all$chr_pos &lt;- as.factor(delta_out_all$chr_pos)\ndelta_out_all$parameter &lt;- as.factor(delta_out_all$parameter)\ndelta_out_all$isSingular &lt;- as.logical(delta_out_all$isSingular)\ndelta_out_all[c(3:25, 27,28)] &lt;- lapply(delta_out_all[c(3:25, 27:28)], as.numeric)"
  },
  {
    "objectID": "qmd/5_physio_meth.html#results",
    "href": "qmd/5_physio_meth.html#results",
    "title": "6  Which changes in CpG site methylation are associated with changes in physiology?",
    "section": "6.4 Results",
    "text": "6.4 Results\nAfter also subsetting for at least an (absolute) estimate of 0.1, there is one significant CpG for delta Microfilaria spp, 29 for delta Trypanosoma spp. and 13 for delta IgG. As there are so many, I will only show the plots of the three most significant ones, also because not all raw data plots are as convincing.\n\n\nRaw data delta Microfilaria\n\n\n\n  \n  \nIt seems like most associations are shaped by a few outliers and that most CpG sites do not actually change (delta meth = 0)."
  },
  {
    "objectID": "qmd/6_fitness_meth.html#prepare-the-data",
    "href": "qmd/6_fitness_meth.html#prepare-the-data",
    "title": "7  Which changes in CpG site methylation are associated with reproductive effort?",
    "section": "7.1 Prepare the data",
    "text": "7.1 Prepare the data\n\n### load packages\npacman::p_load(tidyverse, data.table, tibble, performance, matrixStats, \n               parallel, performance, lmerTest, tidystats, insight, glmmTMB)\n\n### load data\n\nload(file = \"results/modeloutput/subset_sites_sig_deltameth.RData\")\n\n### load phenotypic data\n\nload(\"data/phenotypes/fulldata_complete_epi_withdates.RData\")\n\n#combine with site and fitness data\npheno_pre &lt;- subset(all_pheno_epi, prepost==\"pre\")\n\ndelta_meth &lt;- left_join(delta_meth, unique(pheno_pre[,c(\"id\", \"year\", \"MS\", \"surv\")]), by = c(\"id\", \"year\"))\n                                           \ndelta_meth_ls &lt;- delta_meth %&gt;% group_split(chr_pos)"
  },
  {
    "objectID": "qmd/6_fitness_meth.html#functon-to-run-the-model",
    "href": "qmd/6_fitness_meth.html#functon-to-run-the-model",
    "title": "7  Which changes in CpG site methylation are associated with reproductive effort?",
    "section": "7.2 Functon to run the model",
    "text": "7.2 Functon to run the model\n\n\nCode\n# function to run the model\nfunction_model_fitness &lt;- function(df){tryCatch({\n  chr_pos &lt;- as.character(df[1,1])\n  df &lt;- as.data.frame(df)\n  df$site &lt;- as.factor(df$site)\n  df$id &lt;- as.factor(df$id)\n  \n  ### AMS\n  formula_ams &lt;- formula(paste0(\"MS ~ scale(delta_meth) + age + scale(methperc_pre) + (1|site/id) \"))\n  model_ams &lt;- glmmTMB(formula_ams, data=df, family = \"poisson\", ziformula=~1)\n  summary_ams &lt;- summary(model_ams)\n  \n  #fixed effect\n  parameter_estimate &lt;- summary_ams$coefficients$cond[\"scale(delta_meth)\", \"Estimate\"]\n  parameter_se &lt;- summary_ams$coefficients$cond[\"scale(delta_meth)\",\"Std. Error\"]\n  parameter_zval &lt;- summary_ams$coefficients$cond[\"scale(delta_meth)\",\"z value\"]\n  parameter_pval &lt;- summary_ams$coefficients$cond[\"scale(delta_meth)\", \"Pr(&gt;|z|)\"]\n  \n  #age effect\n  age_estimate &lt;- summary_ams$coefficients$cond[\"age\", \"Estimate\"]\n  age_se &lt;- summary_ams$coefficients$cond[\"age\", \"Std. Error\"]\n  age_zval &lt;- summary_ams$coefficients$cond[\"age\", \"z value\"]\n  age_pval &lt;- summary_ams$coefficients$cond[\"age\", \"Pr(&gt;|z|)\"]\n  \n  #premeth effect\n  pre_estimate &lt;- summary_ams$coefficients$cond[\"scale(methperc_pre)\", \"Estimate\"]\n  pre_se &lt;- summary_ams$coefficients$cond[\"scale(methperc_pre)\", \"Std. Error\"]\n  pre_zval &lt;- summary_ams$coefficients$cond[\"scale(methperc_pre)\", \"z value\"]\n  pre_pval &lt;- summary_ams$coefficients$cond[\"scale(methperc_pre)\", \"Pr(&gt;|z|)\"]\n  \n  rsqc &lt;- performance::r2(model_ams)$R2_conditional #fixed plus random parameterects relative to overall variance\n  rsqm &lt;- performance::r2(model_ams)$R2_marginal #fixed parameterects relative to overall variance\n  \n  message &lt;- model_ams$fit$message\n  \n  icc_id_site &lt;-icc(model_ams, by_group = TRUE, tolerance = 0)[1,2]\n  icc_site &lt;-icc(model_ams, by_group = TRUE, tolerance = 0)[2,2]\n  \n \n  ams &lt;- data.frame(chr_pos=as.factor(chr_pos),\n                    ams_icc_id_site = as.numeric(icc_id_site),\n                    ams_icc_site = as.numeric(icc_site),\n                    ams_delta_meth_estimate = as.numeric(parameter_estimate),\n                    ams_delta_meth_se = as.numeric(parameter_se),\n                    ams_delta_meth_zval = as.numeric(parameter_zval),\n                    ams_delta_meth_pval = as.numeric(parameter_pval),\n                    ams_age_estimate = as.numeric(age_estimate),\n                    ams_age_se = as.numeric(age_se),\n                    ams_age_zval = as.numeric(age_zval),\n                    ams_age_pval = as.numeric(age_pval),\n                    ams_pre_estimate = as.numeric(pre_estimate),\n                    ams_pre_se = as.numeric(pre_se),\n                    ams_pre_zval = as.numeric(pre_zval),\n                    ams_pre_pval = as.numeric(pre_pval),\n                    ams_rsqc = as.numeric(rsqc),\n                    ams_rsqm = as.numeric(rsqm),\n                    ams_message = message              \n  ) \n  \n  ### surv\n  formula_surv &lt;- formula(paste0(\"surv ~ scale(delta_meth) + age + scale(methperc_pre) + (1|site/id) \"))\n  model_surv &lt;- glmmTMB(formula_surv, data=df, family = \"binomial\")\n  summary_surv &lt;- summary(model_surv)\n  \n  #fixed effect\n  parameter_estimate &lt;- summary_surv$coefficients$cond[\"scale(delta_meth)\", \"Estimate\"]\n  parameter_se &lt;- summary_surv$coefficients$cond[\"scale(delta_meth)\",\"Std. Error\"]\n  parameter_zval &lt;- summary_surv$coefficients$cond[\"scale(delta_meth)\",\"z value\"]\n  parameter_pval &lt;- summary_surv$coefficients$cond[\"scale(delta_meth)\", \"Pr(&gt;|z|)\"]\n  \n  #age effect\n  age_estimate &lt;- summary_surv$coefficients$cond[\"age\", \"Estimate\"]\n  age_se &lt;- summary_surv$coefficients$cond[\"age\", \"Std. Error\"]\n  age_zval &lt;- summary_surv$coefficients$cond[\"age\", \"z value\"]\n  age_pval &lt;- summary_surv$coefficients$cond[\"age\", \"Pr(&gt;|z|)\"]\n  \n  #premeth effect\n  pre_estimate &lt;- summary_surv$coefficients$cond[\"scale(methperc_pre)\", \"Estimate\"]\n  pre_se &lt;- summary_surv$coefficients$cond[\"scale(methperc_pre)\", \"Std. Error\"]\n  pre_zval &lt;- summary_surv$coefficients$cond[\"scale(methperc_pre)\", \"z value\"]\n  pre_pval &lt;- summary_surv$coefficients$cond[\"scale(methperc_pre)\", \"Pr(&gt;|z|)\"]\n  \n  rsqc &lt;- performance::r2(model_surv)$R2_conditional #fixed plus random parameterects relative to overall variance\n  rsqm &lt;- performance::r2(model_surv)$R2_marginal #fixed parameterects relative to overall variance\n  \n  message &lt;- model_surv$fit$message\n  \n  icc_id_site &lt;-icc(model_surv, by_group = TRUE, tolerance = 0)[1,2]\n  icc_site &lt;-icc(model_surv, by_group = TRUE, tolerance = 0)[2,2]\n  \n  surv &lt;- data.frame(surv_icc_id_site = as.numeric(icc_id_site),\n                    surv_icc_site = as.numeric(icc_site),\n                    surv_delta_meth_estimate = as.numeric(parameter_estimate),\n                    surv_delta_meth_se = as.numeric(parameter_se),\n                    surv_delta_meth_zval = as.numeric(parameter_zval),\n                    surv_delta_meth_pval = as.numeric(parameter_pval),\n                    surv_age_estimate = as.numeric(age_estimate),\n                    surv_age_se = as.numeric(age_se),\n                    surv_age_zval = as.numeric(age_zval),\n                    surv_age_pval = as.numeric(age_pval),\n                    surv_pre_estimate = as.numeric(pre_estimate),\n                    surv_pre_se = as.numeric(pre_se),\n                    surv_pre_zval = as.numeric(pre_zval),\n                    surv_pre_pval = as.numeric(pre_pval),\n                    surv_rsqc = as.numeric(rsqc),\n                    surv_rsqm = as.numeric(rsqm),\n                    surv_message = message              \n  ) \n  out &lt;- cbind(ams, surv)\n  return(out)\n  \n}, error = function(e){cat(\"ERROR :\", conditionMessage(e), \"\\n\");print(chr_pos)})\n}"
  },
  {
    "objectID": "qmd/6_fitness_meth.html#run-the-model",
    "href": "qmd/6_fitness_meth.html#run-the-model",
    "title": "7  Which changes in CpG site methylation are associated with reproductive effort?",
    "section": "7.3 Run the model",
    "text": "7.3 Run the model\n\n### run the model \n# run model\ndelta_out_fitness &lt;- parallel::mclapply(delta_meth_ls, function_model_fitness,mc.cores=12)\ndelta_out_fitness &lt;- do.call(rbind.data.frame, delta_out_fitness)\n\n# convert to numeric\ndelta_out_fitness$ams_delta_meth_estimate &lt;- as.numeric(delta_out_fitness$ams_delta_meth_estimate)\ndelta_out_fitness$surv_delta_meth_estimate &lt;- as.numeric(delta_out_fitness$surv_delta_meth_estimate)\n\n# exclude those with convergence errors\ndelta_out_ams &lt;- subset(delta_out_fitness, ams_message == \"relative convergence (4)\")\ndelta_out_surv &lt;- subset(delta_out_fitness, surv_message == \"relative convergence (4)\")\n\n# FDR correction\ndelta_out_ams$ams_delta_meth_qval &lt;- p.adjust(delta_out_ams$ams_delta_meth_pval, method = \"fdr\", n = nrow(delta_out_ams))\ndelta_out_surv$surv_delta_meth_qval &lt;- p.adjust(delta_out_surv$surv_delta_meth_pval, method = \"fdr\", n = nrow(delta_out_surv))\n\ndelta_out_ams$chr_pos &lt;- as.factor(delta_out_ams$chr_pos)\ndelta_out_surv$chr_pos &lt;- as.factor(delta_out_surv$chr_pos)"
  },
  {
    "objectID": "qmd/6_fitness_meth.html#results",
    "href": "qmd/6_fitness_meth.html#results",
    "title": "7  Which changes in CpG site methylation are associated with reproductive effort?",
    "section": "7.4 Results",
    "text": "7.4 Results\nThere are 266 significant CpG sites for AMS but none for survival.\n    \n\n7.4.1 Overlapping CpGs previous analyses\nInterestingly, two of the significant CpG sites are the same CpG sites that are significantly associated with changes in Trypanosoma spp.. Below, I plot the relationship between delta Trypanosoma spp and delta methylation (left) and the relationship between delta methylation and AMS (right) for the first (top) and second (bottom) CpG site.\n\n\nRaw data overlapping CpG sites\n\n\n\nThe first CpG site is located in a gene body, intron and downstream region whereas the second CpG site was unannotated (located in an intergenic region) based on the black grouse genome annotation. Neither CpG was annotated based on the lifted over chicken genome annotation."
  },
  {
    "objectID": "qmd/6_fitness_meth.html#annotation",
    "href": "qmd/6_fitness_meth.html#annotation",
    "title": "7  Which changes in CpG site methylation are associated with reproductive effort?",
    "section": "7.5 Annotation",
    "text": "7.5 Annotation\nI annotated all CpG sites from this analysis as well as the previous ones and have lists of genes (based on the chicken genome). Inputting the list of genes in GOrilla shows that cell fate determination is a significant GO term for AMS, but that is the only significant output."
  },
  {
    "objectID": "qmd/2_explore.html#coverage-vs-methylation",
    "href": "qmd/2_explore.html#coverage-vs-methylation",
    "title": "3  Data exploration",
    "section": "3.2 Coverage vs methylation",
    "text": "3.2 Coverage vs methylation\nNext, we can plot the relationship between mean coverage and mean DNA methylation per site. However, as there are many CpG sites we randomly subset 100,000 CpG sites to visualize, and also visualize the density of the points as it is difficult to see overlapping areas.\n\n#### Plot relationshp coverage and dna methylation #####\n\n# geom pointdensity to get an idea of which points are where since many are overlapping\n# on a subset of random CpGs\nrandom_n &lt;- 100000\nggplot(data=summary[sample(nrow(summary),random_n),], aes(x=mean_cov, y=mean_perc_meth)) + labs(x = \"Mean coverage\", y = \"Mean methylation percentage\") +\n  scale_x_continuous(trans = scales::log_trans(),\n                     breaks = scales::log_breaks()) +\n  geom_pointdensity()  +\n  scale_color_viridis_c() -&gt; plot_cov_meth \n\n\n\nRelationship coverage and mean methylation\n\n\n\nHere we see that there are many CpG sites with low average coverage and very low DNA methylation or very high DNA methylation. There is no obvious relationshp between the two, but there is some clustering going on (as expected)."
  },
  {
    "objectID": "qmd/3_changing_meth.html#prepare-the-data",
    "href": "qmd/3_changing_meth.html#prepare-the-data",
    "title": "4  Identifying CpG sites that change over the lekking season",
    "section": "4.1 Prepare the data",
    "text": "4.1 Prepare the data\n\n### load packages \npacman::p_load(tidyverse, data.table, tibble, performance, matrixStats, \n               parallel, performance, lmerTest, tidystats, insight, rptR)\n\n### load epi data\nload(file = \"data/processed/methylkit_prepost_long_onlyvar_min0.75.RData\") \n\n### load phenotype data \nload(\"data/phenotypes/fulldata_complete_epi_withdates.RData\")\nprepost &lt;- subset(all_pheno_epi, !is.na(prepost)) #phenotype dataset also consists of other individuals not part of this study\nrm(all_pheno_epi)\n\n### merge with metadata\n\nprepost_long &lt;- left_join(prepost_long, prepost[,c(\"id\", \"prepost\", \"year\", \"born\",\"site\", \"fulldate\")], \n                          by = c(\"id\", \"year\", \"fulldate\"))\n\nprepost_long$age &lt;- prepost_long$year - prepost_long$born\n\n### convert data to a list, one per CpG site\ndata &lt;- prepost_long %&gt;% group_split(chr_pos)"
  },
  {
    "objectID": "qmd/3_changing_meth.html#functon-to-run-the-model",
    "href": "qmd/3_changing_meth.html#functon-to-run-the-model",
    "title": "4  Identifying CpG sites that change over the lekking season",
    "section": "4.2 Functon to run the model",
    "text": "4.2 Functon to run the model\n\n### define function to collect overdispersion statistics\noverdisp.lmer_fun &lt;- function(model) {\n  vpars &lt;- function(m) {\n    nrow(m)*(nrow(m)+1)/2\n  }\n  model.df &lt;- sum(sapply(VarCorr(model),vpars))+length(fixef(model))\n  rdf &lt;- nrow(model.frame(model))-model.df\n  rp &lt;- residuals(model,type=\"pearson\")\n  Pearson.chisq &lt;- sum(rp^2)\n  prat &lt;- Pearson.chisq/rdf\n  pval &lt;- pchisq(Pearson.chisq, df=rdf, lower.tail=FALSE)\n  data.frame(chisq=Pearson.chisq,ratio=prat,rdf=rdf,p=pval)\n}\n\n### build function to run the model\nfunction_model_glmer &lt;- function(df){tryCatch({\n  chr_pos &lt;- as.character(df[1,1])\n  df &lt;- as.data.frame(df)\n  df$prepost &lt;- as.factor(df$prepost)\n  df$id &lt;- as.factor(df$id)\n  \n  # model\n  model &lt;- lme4::glmer(cbind(numC, numT) ~ prepost + (1|site/id), family = \"binomial\", df)\n  \n  #fixed effects\n  prepost_estimate &lt;- summary(model)$coefficients[2,1]\n  prepost_se &lt;- summary(model)$coefficients[2,2]\n  prepost_zval &lt;- summary(model)$coefficients[2,3]\n  prepost_pval &lt;-  summary(model)$coefficients[2,4]\n  \n  #random effects \n  id_sd &lt;- attributes(VarCorr(model)$id)$stddev\n  id_variance &lt;- data.frame(VarCorr(model), comp=\"Variance\")[1,4]\n  \n  rsqc &lt;- performance::r2(model)$R2_conditional #fixed plus random effects relative to overall variance\n  rsqm &lt;- performance::r2(model)$R2_marginal #fixed effects relative to overall variance\n  \n  dispersion.chisq &lt;- overdisp.lmer_fun(model)[1,1]\n  dispersion.ratio &lt;- overdisp.lmer_fun(model)[1,2]\n  dispersion.rdf &lt;- overdisp.lmer_fun(model)[1,3]\n  dispersion.pval &lt;- overdisp.lmer_fun(model)[1,4]\n  \n  isSingular &lt;- isSingular(model)\n  \n  icc_id_site &lt;- icc(model, by_group = TRUE, tolerance = 0)[1,2]\n  \n  return(data.frame(chr_pos=chr_pos, \n                    prepost_estimate = prepost_estimate,\n                    prepost_se = prepost_se,\n                    prepost_zval = prepost_zval,\n                    prepost_pval = prepost_pval,\n                    id_sd = id_sd,\n                    id_variance = id_variance,\n                    rsqc = rsqc,\n                    rsqm = rsqm,\n                    dispersion.chisq = dispersion.chisq,\n                    dispersion.ratio = dispersion.ratio,\n                    dispersion.rdf = dispersion.rdf,\n                    dispersion.pval = dispersion.pval,\n                    isSingular = isSingular,\n                    icc_id_site = icc_id_site\n                    ))\n}, error = function(e){cat(\"ERROR :\", conditionMessage(e), \"\\n\");print(chr_pos)})\n}"
  },
  {
    "objectID": "qmd/3_changing_meth.html#run-the-model",
    "href": "qmd/3_changing_meth.html#run-the-model",
    "title": "4  Identifying CpG sites that change over the lekking season",
    "section": "4.3 Run the model",
    "text": "4.3 Run the model\n\n### run the model in parallel per CpG site (list item)\nout_glmer &lt;- parallel::mclapply(data, function_model_glmer, mc.cores=4)\nout_glmer &lt;- do.call(rbind.data.frame, out_glmer)\n\n### apply a FDR multiple-testing correction\nout_glmer$prepost_qval &lt;- p.adjust(out_glmer$prepost_pval, method = \"fdr\", n = nrow(out_glmer))\n\nsave(out_glmer, file=\"results/modeloutput/prepost_modeloutput_glmer_min0.75.RData\")\n\n### only select CpG sites with significant effects of pre/post\n\nsub_glmer_prepost &lt;- subset(out_glmer, prepost_qval &lt; 0.05 & dispersion.ratio &lt; 1.1 & dispersion.pval &gt; 0.05 & abs(prepost_estimate &gt;= 0.1))\n# N = 3,418\n\nA total of 3,418 CpG sites significantly change across the lekking period."
  },
  {
    "objectID": "qmd/3_changing_meth.html#function-to-run-the-model",
    "href": "qmd/3_changing_meth.html#function-to-run-the-model",
    "title": "4  Identifying CpG sites that change over the lekking season",
    "section": "4.2 Function to run the model",
    "text": "4.2 Function to run the model\n\n\nCode\n### define function to collect overdispersion statistics\noverdisp.lmer_fun &lt;- function(model) {\n  vpars &lt;- function(m) {\n    nrow(m)*(nrow(m)+1)/2\n  }\n  model.df &lt;- sum(sapply(VarCorr(model),vpars))+length(fixef(model))\n  rdf &lt;- nrow(model.frame(model))-model.df\n  rp &lt;- residuals(model,type=\"pearson\")\n  Pearson.chisq &lt;- sum(rp^2)\n  prat &lt;- Pearson.chisq/rdf\n  pval &lt;- pchisq(Pearson.chisq, df=rdf, lower.tail=FALSE)\n  data.frame(chisq=Pearson.chisq,ratio=prat,rdf=rdf,p=pval)\n}\n\n### build function to run the model\nfunction_model_glmer &lt;- function(df){tryCatch({\n  chr_pos &lt;- as.character(df[1,1])\n  df &lt;- as.data.frame(df)\n  df$prepost &lt;- as.factor(df$prepost)\n  df$id &lt;- as.factor(df$id)\n  \n  # model\n  model &lt;- lme4::glmer(cbind(numC, numT) ~ prepost + (1|site/id), family = \"binomial\", df)\n  \n  #fixed effects\n  prepost_estimate &lt;- summary(model)$coefficients[2,1]\n  prepost_se &lt;- summary(model)$coefficients[2,2]\n  prepost_zval &lt;- summary(model)$coefficients[2,3]\n  prepost_pval &lt;-  summary(model)$coefficients[2,4]\n  \n  #random effects \n  id_sd &lt;- attributes(VarCorr(model)$id)$stddev\n  id_variance &lt;- data.frame(VarCorr(model), comp=\"Variance\")[1,4]\n  \n  rsqc &lt;- performance::r2(model)$R2_conditional #fixed plus random effects relative to overall variance\n  rsqm &lt;- performance::r2(model)$R2_marginal #fixed effects relative to overall variance\n  \n  dispersion.chisq &lt;- overdisp.lmer_fun(model)[1,1]\n  dispersion.ratio &lt;- overdisp.lmer_fun(model)[1,2]\n  dispersion.rdf &lt;- overdisp.lmer_fun(model)[1,3]\n  dispersion.pval &lt;- overdisp.lmer_fun(model)[1,4]\n  \n  isSingular &lt;- isSingular(model)\n  \n  icc_id_site &lt;- icc(model, by_group = TRUE, tolerance = 0)[1,2]\n  \n  return(data.frame(chr_pos=chr_pos, \n                    prepost_estimate = prepost_estimate,\n                    prepost_se = prepost_se,\n                    prepost_zval = prepost_zval,\n                    prepost_pval = prepost_pval,\n                    id_sd = id_sd,\n                    id_variance = id_variance,\n                    rsqc = rsqc,\n                    rsqm = rsqm,\n                    dispersion.chisq = dispersion.chisq,\n                    dispersion.ratio = dispersion.ratio,\n                    dispersion.rdf = dispersion.rdf,\n                    dispersion.pval = dispersion.pval,\n                    isSingular = isSingular,\n                    icc_id_site = icc_id_site\n                    ))\n}, error = function(e){cat(\"ERROR :\", conditionMessage(e), \"\\n\");print(chr_pos)})\n}"
  },
  {
    "objectID": "qmd/4_effort_meth.html#function-to-run-the-model",
    "href": "qmd/4_effort_meth.html#function-to-run-the-model",
    "title": "5  Which changes in CpG site methylation are associated with reproductive effort?",
    "section": "5.2 Function to run the model",
    "text": "5.2 Function to run the model\n\n\nCode\n# function to run the model\nfunction_model_delta &lt;- function(df, parameter){tryCatch({\n  chr_pos &lt;- as.character(df[1,1])\n  df &lt;- as.data.frame(df)\n  df$methperc_pre_scl &lt;- scale(df$methperc_pre)\n\n  formula &lt;- formula(paste0(\"scale(delta_meth) ~ \", parameter, \"_scl + age + scale(methperc_pre) + (1|site/id) \"))\n  \n  model &lt;- lmerTest::lmer(formula, data=df)\n  summary &lt;- summary(model)\n  \n  overdisp.lmer_fun &lt;- function(model) {\n    vpars &lt;- function(m) {\n      nrow(m)*(nrow(m)+1)/2\n    }\n    model.df &lt;- sum(sapply(VarCorr(model),vpars))+length(fixef(model))\n    rdf &lt;- nrow(model.frame(model))-model.df\n    rp &lt;- residuals(model,type=\"pearson\")\n    Pearson.chisq &lt;- sum(rp^2)\n    prat &lt;- Pearson.chisq/rdf\n    pval &lt;- pchisq(Pearson.chisq, df=rdf, lower.tail=FALSE)\n    data.frame(chisq=Pearson.chisq,ratio=prat,rdf=rdf,p=pval)\n  }\n  \n  #fixed effect\n  parameter_estimate &lt;- summary$coefficients[2,1]\n  parameter_se &lt;- summary$coefficients[2,2]\n  parameter_df &lt;- summary$coefficients[2,3]\n  parameter_tval &lt;- summary$coefficients[2,4]\n  parameter_pval &lt;- summary$coefficients[2,5]\n  \n  #age effect\n  age_estimate &lt;- summary$coefficients[\"age\", \"Estimate\"]\n  age_se &lt;- summary$coefficients[\"age\", \"Std. Error\"]\n  age_df &lt;- summary$coefficients[\"age\", \"df\"]\n  age_tval &lt;- summary$coefficients[\"age\", \"t value\"]\n  age_pval &lt;- summary$coefficients[\"age\", \"Pr(&gt;|t|)\"]\n  \n  #premeth effect\n  pre_estimate &lt;- summary$coefficients[\"scale(methperc_pre)\", \"Estimate\"]\n  pre_se &lt;- summary$coefficients[\"scale(methperc_pre)\", \"Std. Error\"]\n  pre_df &lt;- summary$coefficients[\"scale(methperc_pre)\", \"df\"]\n  pre_tval &lt;- summary$coefficients[\"scale(methperc_pre)\", \"t value\"]\n  pre_pval &lt;- summary$coefficients[\"scale(methperc_pre)\", \"Pr(&gt;|t|)\"]\n  \n  rsqc &lt;- performance::r2(model)$R2_conditional #fixed plus random parameterects relative to overall variance\n  rsqm &lt;- performance::r2(model)$R2_marginal #fixed parameterects relative to overall variance\n  \n  dispersion.chisq &lt;- overdisp.lmer_fun(model)[1,1]\n  dispersion.ratio &lt;- overdisp.lmer_fun(model)[1,2]\n  dispersion.rdf &lt;- overdisp.lmer_fun(model)[1,3]\n  dispersion.pval &lt;- overdisp.lmer_fun(model)[1,4]\n  \n  isSingular &lt;- isSingular(model)\n  \n  icc_id_site &lt;-icc(model, by_group = TRUE, tolerance = 0)[1,2]\n  icc_site &lt;-icc(model, by_group = TRUE, tolerance = 0)[2,2]\n  \n  return(data.frame(chr_pos=as.factor(chr_pos),\n                    parameter = as.factor(parameter),\n                    icc_id_site = as.numeric(icc_id_site),\n                    icc_site = as.numeric(icc_site),\n                    parameter_estimate = as.numeric(parameter_estimate),\n                    parameter_se = as.numeric(parameter_se),\n                    parameter_df = as.numeric(parameter_df),\n                    parameter_tval = as.numeric(parameter_tval),\n                    parameter_pval = as.numeric(parameter_pval),\n                    age_estimate = as.numeric(age_estimate),\n                    age_se = as.numeric(age_se),\n                    age_df = as.numeric(age_df),\n                    age_tval = as.numeric(age_tval),\n                    age_pval = as.numeric(age_pval),\n                    pre_estimate = as.numeric(pre_estimate),\n                    pre_se = as.numeric(pre_se),\n                    pre_df = as.numeric(pre_df),\n                    pre_tval = as.numeric(pre_tval),\n                    pre_pval = as.numeric(pre_pval),\n                    rsqc = as.numeric(rsqc),\n                    rsqm = as.numeric(rsqm),\n                    dispersion.chisq = as.numeric(dispersion.chisq),\n                    dispersion.ratio = as.numeric(dispersion.ratio),\n                    dispersion.rdf = as.numeric(dispersion.rdf),\n                    dispersion.pval = as.numeric(dispersion.pval),\n                    isSingular = as.logical(isSingular)\n                    \n  ))\n}, error = function(e){cat(\"ERROR :\", conditionMessage(e), \"\\n\");print(chr_pos)})\n}"
  }
]